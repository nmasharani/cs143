Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'

    4 class: CLASS TYPEID '{' feature_list '}'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'
    6      | CLASS TYPEID '{' '}'
    7      | CLASS TYPEID INHERITS TYPEID '{' '}'

    8 feature_list: feature ';'
    9             | feature_list feature ';'

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID ':' TYPEID
   13        | OBJECTID ':' TYPEID ASSIGN expr

   14 feature_list: error ';'
   15             | feature_list error ';'

   16 formal_list: formal
   17            | formal_list ',' formal

   18 formal: OBJECTID ':' TYPEID

   19 expr: OBJECTID ASSIGN expr
   20     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '.' OBJECTID '(' ')'
   24     | OBJECTID '(' expr_list_comma ')'
   25     | OBJECTID '(' ')'
   26     | IF expr THEN expr ELSE expr FI
   27     | WHILE expr LOOP expr POOL
   28     | '{' expr_list_semicolon '}'
   29     | '{' error '}'
   30     | LET let_list

   31 let_list: OBJECTID ':' TYPEID IN expr
   32         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   33         | OBJECTID ':' TYPEID ',' let_list
   34         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list
   35         | OBJECTID ':' TYPEID ASSIGN error ',' let_list
   36         | OBJECTID ':' TYPEID ASSIGN error IN expr

   37 expr: CASE expr OF case_list ESAC

   38 case: OBJECTID ':' TYPEID DARROW expr ';'

   39 case_list: case
   40          | case_list case

   41 expr: NEW TYPEID
   42     | ISVOID expr
   43     | expr '+' expr
   44     | expr '-' expr
   45     | expr '*' expr
   46     | expr '/' expr
   47     | '~' expr
   48     | expr '<' expr
   49     | expr LE expr
   50     | expr '=' expr
   51     | NOT expr
   52     | '(' expr ')'
   53     | OBJECTID
   54     | INT_CONST
   55     | STR_CONST
   56     | BOOL_CONST

   57 expr_list_semicolon: expr ';'
   58                    | expr_list_semicolon expr ';'
   59                    | error ';'
   60                    | expr_list_semicolon error ';'

   61 expr_list_comma: expr
   62                | expr_list_comma ',' expr
   63                | expr_list_comma ',' error


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 20 21 22 23 24 25 52
')' (41) 10 11 20 21 22 23 24 25 52
'*' (42) 45
'+' (43) 43
',' (44) 17 33 34 35 62 63
'-' (45) 44
'.' (46) 20 21 22 23
'/' (47) 46
':' (58) 10 11 12 13 18 31 32 33 34 35 36 38
';' (59) 2 3 8 9 14 15 38 57 58 59 60
'<' (60) 48
'=' (61) 50
'@' (64) 20 21
'{' (123) 4 5 6 7 10 11 28 29
'}' (125) 4 5 6 7 10 11 28 29
'~' (126) 47
error (256) 14 15 29 35 36 59 60 63
CLASS (258) 4 5 6 7
ELSE (259) 26
FI (260) 26
IF (261) 26
IN (262) 31 32 36
INHERITS (263) 5 7
LET (264) 30
LOOP (265) 27
POOL (266) 27
THEN (267) 26
WHILE (268) 27
CASE (269) 37
ESAC (270) 37
OF (271) 37
DARROW (272) 38
NEW (273) 41
ISVOID (274) 42
STR_CONST (275) 55
INT_CONST (276) 54
BOOL_CONST (277) 56
TYPEID (278) 4 5 6 7 10 11 12 13 18 20 21 31 32 33 34 35 36 38 41
OBJECTID (279) 10 11 12 13 18 19 20 21 22 23 24 25 31 32 33 34 35 36
    38 53
ASSIGN (280) 13 19 32 34 35 36
NOT (281) 51
LE (282) 49
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5 6 7, on right: 2 3
feature_list (50)
    on left: 8 9 14 15, on right: 4 5 9 15
feature (51)
    on left: 10 11 12 13, on right: 8 9
formal_list (52)
    on left: 16 17, on right: 11 17
formal (53)
    on left: 18, on right: 16 17
expr (54)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 37 41 42 43 44 45
    46 47 48 49 50 51 52 53 54 55 56, on right: 10 11 13 19 20 21 22
    23 26 27 31 32 34 36 37 38 42 43 44 45 46 47 48 49 50 51 52 57
    58 61 62
let_list (55)
    on left: 31 32 33 34 35 36, on right: 30 33 34 35
case (56)
    on left: 38, on right: 39 40
case_list (57)
    on left: 39 40, on right: 37 40
expr_list_semicolon (58)
    on left: 57 58 59 60, on right: 28 58 60
expr_list_comma (59)
    on left: 61 62 63, on right: 20 22 24 62 63


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}'
    6      | CLASS . TYPEID '{' '}'
    7      | CLASS . TYPEID INHERITS TYPEID '{' '}'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class ';'

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class . ';'

    ';'  shift, and go to state 8


state 5

    4 class: CLASS TYPEID . '{' feature_list '}'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}'
    6      | CLASS TYPEID . '{' '}'
    7      | CLASS TYPEID . INHERITS TYPEID '{' '}'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 11


state 8

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


state 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}'
    7      | CLASS TYPEID INHERITS . TYPEID '{' '}'

    TYPEID  shift, and go to state 12


state 10

    4 class: CLASS TYPEID '{' . feature_list '}'
    6      | CLASS TYPEID '{' . '}'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 15

    feature_list  go to state 16
    feature       go to state 17


state 11

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


state 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}'
    7      | CLASS TYPEID INHERITS TYPEID . '{' '}'

    '{'  shift, and go to state 18


state 13

   14 feature_list: error . ';'

    ';'  shift, and go to state 19


state 14

   10 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID . ':' TYPEID
   13        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 20
    ':'  shift, and go to state 21


state 15

    6 class: CLASS TYPEID '{' '}' .

    $default  reduce using rule 6 (class)


state 16

    4 class: CLASS TYPEID '{' feature_list . '}'
    9 feature_list: feature_list . feature ';'
   15             | feature_list . error ';'

    error     shift, and go to state 22
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 23

    feature  go to state 24


state 17

    8 feature_list: feature . ';'

    ';'  shift, and go to state 25


state 18

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}'
    7      | CLASS TYPEID INHERITS TYPEID '{' . '}'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 26

    feature_list  go to state 27
    feature       go to state 17


state 19

   14 feature_list: error ';' .

    $default  reduce using rule 14 (feature_list)


state 20

   10 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 28
    ')'       shift, and go to state 29

    formal_list  go to state 30
    formal       go to state 31


state 21

   12 feature: OBJECTID ':' . TYPEID
   13        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 32


state 22

   15 feature_list: feature_list error . ';'

    ';'  shift, and go to state 33


state 23

    4 class: CLASS TYPEID '{' feature_list '}' .

    $default  reduce using rule 4 (class)


state 24

    9 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 34


state 25

    8 feature_list: feature ';' .

    $default  reduce using rule 8 (feature_list)


state 26

    7 class: CLASS TYPEID INHERITS TYPEID '{' '}' .

    $default  reduce using rule 7 (class)


state 27

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
    9 feature_list: feature_list . feature ';'
   15             | feature_list . error ';'

    error     shift, and go to state 22
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 35

    feature  go to state 24


state 28

   18 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 36


state 29

   10 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 37


state 30

   11 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   17 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 38
    ','  shift, and go to state 39


state 31

   16 formal_list: formal .

    $default  reduce using rule 16 (formal_list)


state 32

   12 feature: OBJECTID ':' TYPEID .
   13        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 40

    $default  reduce using rule 12 (feature)


state 33

   15 feature_list: feature_list error ';' .

    $default  reduce using rule 15 (feature_list)


state 34

    9 feature_list: feature_list feature ';' .

    $default  reduce using rule 9 (feature_list)


state 35

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 5 (class)


state 36

   18 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 41


state 37

   10 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 42


state 38

   11 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 43


state 39

   17 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 28

    formal  go to state 44


state 40

   13 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 59


state 41

   18 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 18 (formal)


state 42

   10 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 60


state 43

   11 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 61


state 44

   17 formal_list: formal_list ',' formal .

    $default  reduce using rule 17 (formal_list)


state 45

   26 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 62


state 46

   30 expr: LET . let_list

    OBJECTID  shift, and go to state 63

    let_list  go to state 64


state 47

   27 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 65


state 48

   37 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 66


state 49

   41 expr: NEW . TYPEID

    TYPEID  shift, and go to state 67


state 50

   42 expr: ISVOID . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 68


state 51

   55 expr: STR_CONST .

    $default  reduce using rule 55 (expr)


state 52

   54 expr: INT_CONST .

    $default  reduce using rule 54 (expr)


state 53

   56 expr: BOOL_CONST .

    $default  reduce using rule 56 (expr)


state 54

   19 expr: OBJECTID . ASSIGN expr
   24     | OBJECTID . '(' expr_list_comma ')'
   25     | OBJECTID . '(' ')'
   53     | OBJECTID .

    ASSIGN  shift, and go to state 69
    '('     shift, and go to state 70

    $default  reduce using rule 53 (expr)


state 55

   51 expr: NOT . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 71


state 56

   47 expr: '~' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 72


state 57

   28 expr: '{' . expr_list_semicolon '}'
   29     | '{' . error '}'

    error       shift, and go to state 73
    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr                 go to state 74
    expr_list_semicolon  go to state 75


state 58

   52 expr: '(' . expr ')'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 76


state 59

   13 feature: OBJECTID ':' TYPEID ASSIGN expr .
   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 13 (feature)


state 60

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 86


state 61

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 87


state 62

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   26     | IF expr . THEN expr ELSE expr FI
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    THEN  shift, and go to state 88
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85


state 63

   31 let_list: OBJECTID . ':' TYPEID IN expr
   32         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   33         | OBJECTID . ':' TYPEID ',' let_list
   34         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list
   35         | OBJECTID . ':' TYPEID ASSIGN error ',' let_list
   36         | OBJECTID . ':' TYPEID ASSIGN error IN expr

    ':'  shift, and go to state 89


state 64

   30 expr: LET let_list .

    $default  reduce using rule 30 (expr)


state 65

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   27     | WHILE expr . LOOP expr POOL
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LOOP  shift, and go to state 90
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85


state 66

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   37     | CASE expr . OF case_list ESAC
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    OF   shift, and go to state 91
    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85


state 67

   41 expr: NEW TYPEID .

    $default  reduce using rule 41 (expr)


state 68

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   42     | ISVOID expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 42 (expr)


state 69

   19 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 92


state 70

   24 expr: OBJECTID '(' . expr_list_comma ')'
   25     | OBJECTID '(' . ')'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58
    ')'         shift, and go to state 93

    expr             go to state 94
    expr_list_comma  go to state 95


state 71

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   51     | NOT expr .

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 51 (expr)


state 72

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | '~' expr .
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 47 (expr)


state 73

   29 expr: '{' error . '}'
   59 expr_list_semicolon: error . ';'

    ';'  shift, and go to state 96
    '}'  shift, and go to state 97


state 74

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   57 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ';'  shift, and go to state 98


state 75

   28 expr: '{' expr_list_semicolon . '}'
   58 expr_list_semicolon: expr_list_semicolon . expr ';'
   60                    | expr_list_semicolon . error ';'

    error       shift, and go to state 99
    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '}'         shift, and go to state 100
    '('         shift, and go to state 58

    expr  go to state 101


state 76

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   52     | '(' expr . ')'

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ')'  shift, and go to state 102


state 77

   49 expr: expr LE . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 103


state 78

   48 expr: expr '<' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 104


state 79

   50 expr: expr '=' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 105


state 80

   43 expr: expr '+' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 106


state 81

   44 expr: expr '-' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 107


state 82

   45 expr: expr '*' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 108


state 83

   46 expr: expr '/' . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 109


state 84

   20 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 110


state 85

   22 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   23     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 111


state 86

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    '}'  shift, and go to state 112


state 87

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 113


state 88

   26 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 114


state 89

   31 let_list: OBJECTID ':' . TYPEID IN expr
   32         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   33         | OBJECTID ':' . TYPEID ',' let_list
   34         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list
   35         | OBJECTID ':' . TYPEID ASSIGN error ',' let_list
   36         | OBJECTID ':' . TYPEID ASSIGN error IN expr

    TYPEID  shift, and go to state 115


state 90

   27 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 116


state 91

   37 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 117

    case       go to state 118
    case_list  go to state 119


state 92

   19 expr: OBJECTID ASSIGN expr .
   20     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 19 (expr)


state 93

   25 expr: OBJECTID '(' ')' .

    $default  reduce using rule 25 (expr)


state 94

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   61 expr_list_comma: expr .

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 61 (expr_list_comma)


state 95

   24 expr: OBJECTID '(' expr_list_comma . ')'
   62 expr_list_comma: expr_list_comma . ',' expr
   63                | expr_list_comma . ',' error

    ')'  shift, and go to state 120
    ','  shift, and go to state 121


state 96

   59 expr_list_semicolon: error ';' .

    $default  reduce using rule 59 (expr_list_semicolon)


state 97

   29 expr: '{' error '}' .

    $default  reduce using rule 29 (expr)


state 98

   57 expr_list_semicolon: expr ';' .

    $default  reduce using rule 57 (expr_list_semicolon)


state 99

   60 expr_list_semicolon: expr_list_semicolon error . ';'

    ';'  shift, and go to state 122


state 100

   28 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 28 (expr)


state 101

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   58 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ';'  shift, and go to state 123


state 102

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


state 103

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   49     | expr LE expr .
   50     | expr . '=' expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 49 (expr)


state 104

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   48     | expr '<' expr .
   49     | expr . LE expr
   50     | expr . '=' expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 48 (expr)


state 105

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   50     | expr '=' expr .

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 50 (expr)


state 106

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   43     | expr '+' expr .
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 43 (expr)


state 107

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   44     | expr '-' expr .
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 44 (expr)


state 108

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   45     | expr '*' expr .
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 45 (expr)


state 109

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   46     | expr '/' expr .
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 46 (expr)


state 110

   20 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 124


state 111

   22 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   23     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 125


state 112

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 113

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    '}'  shift, and go to state 126


state 114

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   26     | IF expr THEN expr . ELSE expr FI
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    ELSE  shift, and go to state 127
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85


state 115

   31 let_list: OBJECTID ':' TYPEID . IN expr
   32         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   33         | OBJECTID ':' TYPEID . ',' let_list
   34         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list
   35         | OBJECTID ':' TYPEID . ASSIGN error ',' let_list
   36         | OBJECTID ':' TYPEID . ASSIGN error IN expr

    IN      shift, and go to state 128
    ASSIGN  shift, and go to state 129
    ','     shift, and go to state 130


state 116

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   27     | WHILE expr LOOP expr . POOL
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    POOL  shift, and go to state 131
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85


state 117

   38 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 132


state 118

   39 case_list: case .

    $default  reduce using rule 39 (case_list)


state 119

   37 expr: CASE expr OF case_list . ESAC
   40 case_list: case_list . case

    ESAC      shift, and go to state 133
    OBJECTID  shift, and go to state 117

    case  go to state 134


state 120

   24 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 24 (expr)


state 121

   62 expr_list_comma: expr_list_comma ',' . expr
   63                | expr_list_comma ',' . error

    error       shift, and go to state 135
    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 136


state 122

   60 expr_list_semicolon: expr_list_semicolon error ';' .

    $default  reduce using rule 60 (expr_list_semicolon)


state 123

   58 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 58 (expr_list_semicolon)


state 124

   20 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   21     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 137


state 125

   22 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   23     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58
    ')'         shift, and go to state 138

    expr             go to state 94
    expr_list_comma  go to state 139


state 126

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 11 (feature)


state 127

   26 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 140


state 128

   31 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 141


state 129

   32 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   34         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list
   35         | OBJECTID ':' TYPEID ASSIGN . error ',' let_list
   36         | OBJECTID ':' TYPEID ASSIGN . error IN expr

    error       shift, and go to state 142
    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 143


state 130

   33 let_list: OBJECTID ':' TYPEID ',' . let_list

    OBJECTID  shift, and go to state 63

    let_list  go to state 144


state 131

   27 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 27 (expr)


state 132

   38 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 145


state 133

   37 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 37 (expr)


state 134

   40 case_list: case_list case .

    $default  reduce using rule 40 (case_list)


state 135

   63 expr_list_comma: expr_list_comma ',' error .

    $default  reduce using rule 63 (expr_list_comma)


state 136

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr
   62 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 62 (expr_list_comma)


state 137

   20 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   21     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 146


state 138

   23 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 23 (expr)


state 139

   22 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   62 expr_list_comma: expr_list_comma . ',' expr
   63                | expr_list_comma . ',' error

    ')'  shift, and go to state 147
    ','  shift, and go to state 121


state 140

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   26     | IF expr THEN expr ELSE expr . FI
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    FI   shift, and go to state 148
    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85


state 141

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   31 let_list: OBJECTID ':' TYPEID IN expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 31 (let_list)


state 142

   35 let_list: OBJECTID ':' TYPEID ASSIGN error . ',' let_list
   36         | OBJECTID ':' TYPEID ASSIGN error . IN expr

    IN   shift, and go to state 149
    ','  shift, and go to state 150


state 143

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   32 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   34         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    IN   shift, and go to state 151
    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ','  shift, and go to state 152


state 144

   33 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 33 (let_list)


state 145

   38 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 153


state 146

   20 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   21     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58
    ')'         shift, and go to state 154

    expr             go to state 94
    expr_list_comma  go to state 155


state 147

   22 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 22 (expr)


state 148

   26 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 26 (expr)


state 149

   36 let_list: OBJECTID ':' TYPEID ASSIGN error IN . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 156


state 150

   35 let_list: OBJECTID ':' TYPEID ASSIGN error ',' . let_list

    OBJECTID  shift, and go to state 63

    let_list  go to state 157


state 151

   32 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 158


state 152

   34 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    OBJECTID  shift, and go to state 63

    let_list  go to state 159


state 153

   38 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 45
    LET         shift, and go to state 46
    WHILE       shift, and go to state 47
    CASE        shift, and go to state 48
    NEW         shift, and go to state 49
    ISVOID      shift, and go to state 50
    STR_CONST   shift, and go to state 51
    INT_CONST   shift, and go to state 52
    BOOL_CONST  shift, and go to state 53
    OBJECTID    shift, and go to state 54
    NOT         shift, and go to state 55
    '~'         shift, and go to state 56
    '{'         shift, and go to state 57
    '('         shift, and go to state 58

    expr  go to state 160


state 154

   21 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 21 (expr)


state 155

   20 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   62 expr_list_comma: expr_list_comma . ',' expr
   63                | expr_list_comma . ',' error

    ')'  shift, and go to state 161
    ','  shift, and go to state 121


state 156

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   36 let_list: OBJECTID ':' TYPEID ASSIGN error IN expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 36 (let_list)


state 157

   35 let_list: OBJECTID ':' TYPEID ASSIGN error ',' let_list .

    $default  reduce using rule 35 (let_list)


state 158

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   32 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 32 (let_list)


state 159

   34 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 34 (let_list)


state 160

   20 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   22     | expr . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '.' OBJECTID '(' ')'
   38 case: OBJECTID ':' TYPEID DARROW expr . ';'
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   48     | expr . '<' expr
   49     | expr . LE expr
   50     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ';'  shift, and go to state 162


state 161

   20 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 20 (expr)


state 162

   38 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 38 (case)
