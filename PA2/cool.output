Terminals unused in grammar

   ERROR


State 104 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS error '{' feature_list '}' ';'
    7      | error '{' feature_list '}' ';'

    8 feature_list: /* empty */
    9             | feature_list feature ';'

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID ':' TYPEID
   13        | OBJECTID ':' TYPEID ASSIGN expr

   14 feature_list: feature_list error ';'

   15 formal_list: formal
   16            | formal_list ',' formal

   17 formal: OBJECTID ':' TYPEID

   18 expr: OBJECTID ASSIGN expr
   19     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr '.' OBJECTID '(' expr_list_comma ')'
   22     | expr '.' OBJECTID '(' ')'
   23     | OBJECTID '(' expr_list_comma ')'
   24     | OBJECTID '(' ')'
   25     | IF expr THEN expr ELSE expr FI
   26     | WHILE expr LOOP expr POOL
   27     | '{' expr_list_semicolon '}'
   28     | '{' error '}'
   29     | '{' expr_list_semicolon error '}'
   30     | '{' error ';' expr_list_semicolon '}'
   31     | '{' expr_list_semicolon error ';' expr_list_semicolon '}'
   32     | '{' expr ';' error '}'
   33     | '{' error ';' expr ';' '}'
   34     | '{' expr ';' error ';' expr ';' '}'
   35     | LET let_list

   36 let_list: OBJECTID ':' TYPEID IN expr
   37         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   38         | OBJECTID ':' TYPEID ',' let_list
   39         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list
   40         | error ',' let_list

   41 expr: CASE expr OF case_list ESAC

   42 case: OBJECTID ':' TYPEID DARROW expr ';'

   43 case_list: case
   44          | case_list case

   45 expr: NEW TYPEID
   46     | ISVOID expr
   47     | expr '+' expr
   48     | expr '-' expr
   49     | expr '*' expr
   50     | expr '/' expr
   51     | '~' expr
   52     | expr '<' expr
   53     | expr LE expr
   54     | expr '=' expr
   55     | NOT expr
   56     | '(' expr ')'
   57     | OBJECTID
   58     | INT_CONST
   59     | STR_CONST
   60     | BOOL_CONST

   61 expr_list_semicolon: expr ';'
   62                    | expr_list_semicolon expr ';'

   63 expr_list_comma: expr
   64                | expr_list_comma ',' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 19 20 21 22 23 24 56
')' (41) 10 11 19 20 21 22 23 24 56
'*' (42) 49
'+' (43) 47
',' (44) 16 38 39 40 64
'-' (45) 48
'.' (46) 19 20 21 22
'/' (47) 50
':' (58) 10 11 12 13 17 36 37 38 39 42
';' (59) 4 5 6 7 9 14 30 31 32 33 34 42 61 62
'<' (60) 52
'=' (61) 54
'@' (64) 19 20
'{' (123) 4 5 6 7 10 11 27 28 29 30 31 32 33 34
'}' (125) 4 5 6 7 10 11 27 28 29 30 31 32 33 34
'~' (126) 51
error (256) 6 7 14 28 29 30 31 32 33 34 40
CLASS (258) 4 5 6
ELSE (259) 25
FI (260) 25
IF (261) 25
IN (262) 36 37
INHERITS (263) 5
LET (264) 35
LOOP (265) 26
POOL (266) 26
THEN (267) 25
WHILE (268) 26
CASE (269) 41
ESAC (270) 41
OF (271) 41
DARROW (272) 42
NEW (273) 45
ISVOID (274) 46
STR_CONST (275) 59
INT_CONST (276) 58
BOOL_CONST (277) 60
TYPEID (278) 4 5 10 11 12 13 17 19 20 36 37 38 39 42 45
OBJECTID (279) 10 11 12 13 17 18 19 20 21 22 23 24 36 37 38 39 42 57
ASSIGN (280) 13 18 37 39
NOT (281) 55
LE (282) 53
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5 6 7, on right: 2 3
feature_list (50)
    on left: 8 9 14, on right: 4 5 6 7 9 14
feature (51)
    on left: 10 11 12 13, on right: 9
formal_list (52)
    on left: 15 16, on right: 11 16
formal (53)
    on left: 17, on right: 15 16
expr (54)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    41 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60, on right: 10
    11 13 18 19 20 21 22 25 26 32 33 34 36 37 39 41 42 46 47 48 49
    50 51 52 53 54 55 56 61 62 63 64
let_list (55)
    on left: 36 37 38 39 40, on right: 35 38 39 40
case (56)
    on left: 42, on right: 43 44
case_list (57)
    on left: 43 44, on right: 41 44
expr_list_semicolon (58)
    on left: 61 62, on right: 27 29 30 31 62
expr_list_comma (59)
    on left: 63 64, on right: 19 21 23 64


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


state 1

    7 class: error . '{' feature_list '}' ';'

    '{'  shift, and go to state 6


state 2

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS . error '{' feature_list '}' ';'

    error   shift, and go to state 7
    TYPEID  shift, and go to state 8


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: class_list .
    3 class_list: class_list . class

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 1 (program)

    class  go to state 10


state 5

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 6

    7 class: error '{' . feature_list '}' ';'

    $default  reduce using rule 8 (feature_list)

    feature_list  go to state 11


state 7

    6 class: CLASS error . '{' feature_list '}' ';'

    '{'  shift, and go to state 12


state 8

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 13
    '{'       shift, and go to state 14


state 9

    0 $accept: program $end .

    $default  accept


state 10

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 11

    7 class: error '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature ';'
   14             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 17

    feature  go to state 18


state 12

    6 class: CLASS error '{' . feature_list '}' ';'

    $default  reduce using rule 8 (feature_list)

    feature_list  go to state 19


state 13

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 20


state 14

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 8 (feature_list)

    feature_list  go to state 21


state 15

   14 feature_list: feature_list error . ';'

    ';'  shift, and go to state 22


state 16

   10 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID . ':' TYPEID
   13        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 23
    ':'  shift, and go to state 24


state 17

    7 class: error '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


state 18

    9 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 26


state 19

    6 class: CLASS error '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature ';'
   14             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 27

    feature  go to state 18


state 20

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 28


state 21

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature ';'
   14             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 29

    feature  go to state 18


state 22

   14 feature_list: feature_list error ';' .

    $default  reduce using rule 14 (feature_list)


state 23

   10 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 30
    ')'       shift, and go to state 31

    formal_list  go to state 32
    formal       go to state 33


state 24

   12 feature: OBJECTID ':' . TYPEID
   13        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 34


state 25

    7 class: error '{' feature_list '}' ';' .

    $default  reduce using rule 7 (class)


state 26

    9 feature_list: feature_list feature ';' .

    $default  reduce using rule 9 (feature_list)


state 27

    6 class: CLASS error '{' feature_list '}' . ';'

    ';'  shift, and go to state 35


state 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 8 (feature_list)

    feature_list  go to state 36


state 29

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 37


state 30

   17 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 38


state 31

   10 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 39


state 32

   11 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   16 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 40
    ','  shift, and go to state 41


state 33

   15 formal_list: formal .

    $default  reduce using rule 15 (formal_list)


state 34

   12 feature: OBJECTID ':' TYPEID .
   13        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 42

    $default  reduce using rule 12 (feature)


state 35

    6 class: CLASS error '{' feature_list '}' ';' .

    $default  reduce using rule 6 (class)


state 36

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature ';'
   14             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 43

    feature  go to state 18


state 37

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 38

   17 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 44


state 39

   10 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 45


state 40

   11 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 46


state 41

   16 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 30

    formal  go to state 47


state 42

   13 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 62


state 43

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 63


state 44

   17 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 17 (formal)


state 45

   10 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 64


state 46

   11 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 65


state 47

   16 formal_list: formal_list ',' formal .

    $default  reduce using rule 16 (formal_list)


state 48

   25 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 66


state 49

   35 expr: LET . let_list

    error     shift, and go to state 67
    OBJECTID  shift, and go to state 68

    let_list  go to state 69


state 50

   26 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 70


state 51

   41 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 71


state 52

   45 expr: NEW . TYPEID

    TYPEID  shift, and go to state 72


state 53

   46 expr: ISVOID . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 73


state 54

   59 expr: STR_CONST .

    $default  reduce using rule 59 (expr)


state 55

   58 expr: INT_CONST .

    $default  reduce using rule 58 (expr)


state 56

   60 expr: BOOL_CONST .

    $default  reduce using rule 60 (expr)


state 57

   18 expr: OBJECTID . ASSIGN expr
   23     | OBJECTID . '(' expr_list_comma ')'
   24     | OBJECTID . '(' ')'
   57     | OBJECTID .

    ASSIGN  shift, and go to state 74
    '('     shift, and go to state 75

    $default  reduce using rule 57 (expr)


state 58

   55 expr: NOT . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 76


state 59

   51 expr: '~' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 77


state 60

   27 expr: '{' . expr_list_semicolon '}'
   28     | '{' . error '}'
   29     | '{' . expr_list_semicolon error '}'
   30     | '{' . error ';' expr_list_semicolon '}'
   31     | '{' . expr_list_semicolon error ';' expr_list_semicolon '}'
   32     | '{' . expr ';' error '}'
   33     | '{' . error ';' expr ';' '}'
   34     | '{' . expr ';' error ';' expr ';' '}'

    error       shift, and go to state 78
    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr                 go to state 79
    expr_list_semicolon  go to state 80


state 61

   56 expr: '(' . expr ')'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 81


state 62

   13 feature: OBJECTID ':' TYPEID ASSIGN expr .
   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 13 (feature)


state 63

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 64

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 91


state 65

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 92


state 66

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   25     | IF expr . THEN expr ELSE expr FI
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    THEN  shift, and go to state 93
    LE    shift, and go to state 82
    '<'   shift, and go to state 83
    '='   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '@'   shift, and go to state 89
    '.'   shift, and go to state 90


state 67

   40 let_list: error . ',' let_list

    ','  shift, and go to state 94


state 68

   36 let_list: OBJECTID . ':' TYPEID IN expr
   37         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   38         | OBJECTID . ':' TYPEID ',' let_list
   39         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list

    ':'  shift, and go to state 95


state 69

   35 expr: LET let_list .

    $default  reduce using rule 35 (expr)


state 70

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   26     | WHILE expr . LOOP expr POOL
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LOOP  shift, and go to state 96
    LE    shift, and go to state 82
    '<'   shift, and go to state 83
    '='   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '@'   shift, and go to state 89
    '.'   shift, and go to state 90


state 71

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   41     | CASE expr . OF case_list ESAC
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    OF   shift, and go to state 97
    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90


state 72

   45 expr: NEW TYPEID .

    $default  reduce using rule 45 (expr)


state 73

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   46     | ISVOID expr .
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 46 (expr)


state 74

   18 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 98


state 75

   23 expr: OBJECTID '(' . expr_list_comma ')'
   24     | OBJECTID '(' . ')'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61
    ')'         shift, and go to state 99

    expr             go to state 100
    expr_list_comma  go to state 101


state 76

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   55     | NOT expr .

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 55 (expr)


state 77

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | '~' expr .
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 51 (expr)


state 78

   28 expr: '{' error . '}'
   30     | '{' error . ';' expr_list_semicolon '}'
   33     | '{' error . ';' expr ';' '}'

    '}'  shift, and go to state 102
    ';'  shift, and go to state 103


state 79

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   32     | '{' expr . ';' error '}'
   34     | '{' expr . ';' error ';' expr ';' '}'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   61 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ';'  shift, and go to state 104


state 80

   27 expr: '{' expr_list_semicolon . '}'
   29     | '{' expr_list_semicolon . error '}'
   31     | '{' expr_list_semicolon . error ';' expr_list_semicolon '}'
   62 expr_list_semicolon: expr_list_semicolon . expr ';'

    error       shift, and go to state 105
    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '}'         shift, and go to state 106
    '('         shift, and go to state 61

    expr  go to state 107


state 81

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   56     | '(' expr . ')'

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ')'  shift, and go to state 108


state 82

   53 expr: expr LE . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 109


state 83

   52 expr: expr '<' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 110


state 84

   54 expr: expr '=' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 111


state 85

   47 expr: expr '+' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 112


state 86

   48 expr: expr '-' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 113


state 87

   49 expr: expr '*' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 114


state 88

   50 expr: expr '/' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 115


state 89

   19 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 116


state 90

   21 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   22     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 117


state 91

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    '}'  shift, and go to state 118


state 92

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 119


state 93

   25 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 120


state 94

   40 let_list: error ',' . let_list

    error     shift, and go to state 67
    OBJECTID  shift, and go to state 68

    let_list  go to state 121


state 95

   36 let_list: OBJECTID ':' . TYPEID IN expr
   37         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   38         | OBJECTID ':' . TYPEID ',' let_list
   39         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list

    TYPEID  shift, and go to state 122


state 96

   26 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 123


state 97

   41 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 124

    case       go to state 125
    case_list  go to state 126


state 98

   18 expr: OBJECTID ASSIGN expr .
   19     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 18 (expr)


state 99

   24 expr: OBJECTID '(' ')' .

    $default  reduce using rule 24 (expr)


state 100

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   63 expr_list_comma: expr .

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 63 (expr_list_comma)


state 101

   23 expr: OBJECTID '(' expr_list_comma . ')'
   64 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 127
    ','  shift, and go to state 128


state 102

   28 expr: '{' error '}' .

    $default  reduce using rule 28 (expr)


state 103

   30 expr: '{' error ';' . expr_list_semicolon '}'
   33     | '{' error ';' . expr ';' '}'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr                 go to state 129
    expr_list_semicolon  go to state 130


state 104

   32 expr: '{' expr ';' . error '}'
   34     | '{' expr ';' . error ';' expr ';' '}'
   61 expr_list_semicolon: expr ';' .

    error  shift, and go to state 131

    error       [reduce using rule 61 (expr_list_semicolon)]
    IF          reduce using rule 61 (expr_list_semicolon)
    LET         reduce using rule 61 (expr_list_semicolon)
    WHILE       reduce using rule 61 (expr_list_semicolon)
    CASE        reduce using rule 61 (expr_list_semicolon)
    NEW         reduce using rule 61 (expr_list_semicolon)
    ISVOID      reduce using rule 61 (expr_list_semicolon)
    STR_CONST   reduce using rule 61 (expr_list_semicolon)
    INT_CONST   reduce using rule 61 (expr_list_semicolon)
    BOOL_CONST  reduce using rule 61 (expr_list_semicolon)
    OBJECTID    reduce using rule 61 (expr_list_semicolon)
    NOT         reduce using rule 61 (expr_list_semicolon)
    '~'         reduce using rule 61 (expr_list_semicolon)
    '{'         reduce using rule 61 (expr_list_semicolon)
    '}'         reduce using rule 61 (expr_list_semicolon)
    '('         reduce using rule 61 (expr_list_semicolon)


state 105

   29 expr: '{' expr_list_semicolon error . '}'
   31     | '{' expr_list_semicolon error . ';' expr_list_semicolon '}'

    '}'  shift, and go to state 132
    ';'  shift, and go to state 133


state 106

   27 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 27 (expr)


state 107

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   62 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ';'  shift, and go to state 134


state 108

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


state 109

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   53     | expr LE expr .
   54     | expr . '=' expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 53 (expr)


state 110

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   52     | expr '<' expr .
   53     | expr . LE expr
   54     | expr . '=' expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 52 (expr)


state 111

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   54     | expr '=' expr .

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 54 (expr)


state 112

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   47     | expr '+' expr .
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 47 (expr)


state 113

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   48     | expr '-' expr .
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 48 (expr)


state 114

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   49     | expr '*' expr .
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 49 (expr)


state 115

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   50     | expr '/' expr .
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 50 (expr)


state 116

   19 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 135


state 117

   21 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   22     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 136


state 118

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 119

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    '}'  shift, and go to state 137


state 120

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   25     | IF expr THEN expr . ELSE expr FI
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    ELSE  shift, and go to state 138
    LE    shift, and go to state 82
    '<'   shift, and go to state 83
    '='   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '@'   shift, and go to state 89
    '.'   shift, and go to state 90


state 121

   40 let_list: error ',' let_list .

    $default  reduce using rule 40 (let_list)


state 122

   36 let_list: OBJECTID ':' TYPEID . IN expr
   37         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   38         | OBJECTID ':' TYPEID . ',' let_list
   39         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list

    IN      shift, and go to state 139
    ASSIGN  shift, and go to state 140
    ','     shift, and go to state 141


state 123

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   26     | WHILE expr LOOP expr . POOL
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    POOL  shift, and go to state 142
    LE    shift, and go to state 82
    '<'   shift, and go to state 83
    '='   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '@'   shift, and go to state 89
    '.'   shift, and go to state 90


state 124

   42 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 143


state 125

   43 case_list: case .

    $default  reduce using rule 43 (case_list)


state 126

   41 expr: CASE expr OF case_list . ESAC
   44 case_list: case_list . case

    ESAC      shift, and go to state 144
    OBJECTID  shift, and go to state 124

    case  go to state 145


state 127

   23 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 23 (expr)


state 128

   64 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 146


state 129

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   33     | '{' error ';' expr . ';' '}'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   61 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ';'  shift, and go to state 147


state 130

   30 expr: '{' error ';' expr_list_semicolon . '}'
   62 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '}'         shift, and go to state 148
    '('         shift, and go to state 61

    expr  go to state 107


state 131

   32 expr: '{' expr ';' error . '}'
   34     | '{' expr ';' error . ';' expr ';' '}'

    '}'  shift, and go to state 149
    ';'  shift, and go to state 150


state 132

   29 expr: '{' expr_list_semicolon error '}' .

    $default  reduce using rule 29 (expr)


state 133

   31 expr: '{' expr_list_semicolon error ';' . expr_list_semicolon '}'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr                 go to state 151
    expr_list_semicolon  go to state 152


state 134

   62 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 62 (expr_list_semicolon)


state 135

   19 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   20     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 153


state 136

   21 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   22     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61
    ')'         shift, and go to state 154

    expr             go to state 100
    expr_list_comma  go to state 155


state 137

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 11 (feature)


state 138

   25 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 156


state 139

   36 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 157


state 140

   37 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   39         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 158


state 141

   38 let_list: OBJECTID ':' TYPEID ',' . let_list

    error     shift, and go to state 67
    OBJECTID  shift, and go to state 68

    let_list  go to state 159


state 142

   26 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 26 (expr)


state 143

   42 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 160


state 144

   41 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 41 (expr)


state 145

   44 case_list: case_list case .

    $default  reduce using rule 44 (case_list)


state 146

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   64 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 64 (expr_list_comma)


state 147

   33 expr: '{' error ';' expr ';' . '}'
   61 expr_list_semicolon: expr ';' .

    '}'  shift, and go to state 161

    '}'       [reduce using rule 61 (expr_list_semicolon)]
    $default  reduce using rule 61 (expr_list_semicolon)


state 148

   30 expr: '{' error ';' expr_list_semicolon '}' .

    $default  reduce using rule 30 (expr)


state 149

   32 expr: '{' expr ';' error '}' .

    $default  reduce using rule 32 (expr)


state 150

   34 expr: '{' expr ';' error ';' . expr ';' '}'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 162


state 151

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr
   61 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ';'  shift, and go to state 163


state 152

   31 expr: '{' expr_list_semicolon error ';' expr_list_semicolon . '}'
   62 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '}'         shift, and go to state 164
    '('         shift, and go to state 61

    expr  go to state 107


state 153

   19 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   20     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 165


state 154

   22 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 22 (expr)


state 155

   21 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   64 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 166
    ','  shift, and go to state 128


state 156

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   25     | IF expr THEN expr ELSE expr . FI
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    FI   shift, and go to state 167
    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90


state 157

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   36 let_list: OBJECTID ':' TYPEID IN expr .
   47 expr: expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 36 (let_list)


state 158

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   37 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   39         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   47 expr: expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    IN   shift, and go to state 168
    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ','  shift, and go to state 169


state 159

   38 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 38 (let_list)


state 160

   42 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 170


state 161

   33 expr: '{' error ';' expr ';' '}' .

    $default  reduce using rule 33 (expr)


state 162

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   34     | '{' expr ';' error ';' expr . ';' '}'
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ';'  shift, and go to state 171


state 163

   61 expr_list_semicolon: expr ';' .

    $default  reduce using rule 61 (expr_list_semicolon)


state 164

   31 expr: '{' expr_list_semicolon error ';' expr_list_semicolon '}' .

    $default  reduce using rule 31 (expr)


state 165

   19 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   20     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61
    ')'         shift, and go to state 172

    expr             go to state 100
    expr_list_comma  go to state 173


state 166

   21 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 21 (expr)


state 167

   25 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 25 (expr)


state 168

   37 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 174


state 169

   39 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    error     shift, and go to state 67
    OBJECTID  shift, and go to state 68

    let_list  go to state 175


state 170

   42 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 48
    LET         shift, and go to state 49
    WHILE       shift, and go to state 50
    CASE        shift, and go to state 51
    NEW         shift, and go to state 52
    ISVOID      shift, and go to state 53
    STR_CONST   shift, and go to state 54
    INT_CONST   shift, and go to state 55
    BOOL_CONST  shift, and go to state 56
    OBJECTID    shift, and go to state 57
    NOT         shift, and go to state 58
    '~'         shift, and go to state 59
    '{'         shift, and go to state 60
    '('         shift, and go to state 61

    expr  go to state 176


state 171

   34 expr: '{' expr ';' error ';' expr ';' . '}'

    '}'  shift, and go to state 177


state 172

   20 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 20 (expr)


state 173

   19 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   64 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 178
    ','  shift, and go to state 128


state 174

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   37 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   47 expr: expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90

    $default  reduce using rule 37 (let_list)


state 175

   39 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 39 (let_list)


state 176

   19 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   21     | expr . '.' OBJECTID '(' expr_list_comma ')'
   22     | expr . '.' OBJECTID '(' ')'
   42 case: OBJECTID ':' TYPEID DARROW expr . ';'
   47 expr: expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   52     | expr . '<' expr
   53     | expr . LE expr
   54     | expr . '=' expr

    LE   shift, and go to state 82
    '<'  shift, and go to state 83
    '='  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '@'  shift, and go to state 89
    '.'  shift, and go to state 90
    ';'  shift, and go to state 179


state 177

   34 expr: '{' expr ';' error ';' expr ';' '}' .

    $default  reduce using rule 34 (expr)


state 178

   19 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 19 (expr)


state 179

   42 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 42 (case)
