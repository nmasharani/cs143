Terminals unused in grammar

   ERROR


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID ':' TYPEID
   12        | OBJECTID ':' TYPEID ASSIGN expr

   13 formal_list: formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 expr: OBJECTID ASSIGN expr
   17     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr '.' OBJECTID '(' expr_list_comma ')'
   20     | expr '.' OBJECTID '(' ')'
   21     | OBJECTID '(' expr_list_comma ')'
   22     | OBJECTID '(' ')'
   23     | IF expr THEN expr ELSE expr FI
   24     | WHILE expr LOOP expr POOL
   25     | '{' expr_list_semicolon '}'
   26     | LET let_list

   27 let_list: OBJECTID ':' TYPEID IN expr
   28         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   29         | OBJECTID ':' TYPEID ',' let_list
   30         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list

   31 expr: CASE expr OF case_list ESAC

   32 case: OBJECTID ':' TYPEID DARROW expr ';'

   33 case_list: case
   34          | case_list case

   35 expr: NEW TYPEID
   36     | ISVOID expr
   37     | expr '+' expr
   38     | expr '-' expr
   39     | expr '*' expr
   40     | expr '/' expr
   41     | '~' expr
   42     | expr '<' expr
   43     | expr LE expr
   44     | expr '=' expr
   45     | NOT expr
   46     | '(' expr ')'
   47     | OBJECTID
   48     | INT_CONST
   49     | STR_CONST
   50     | BOOL_CONST

   51 expr_list_semicolon: expr ';'
   52                    | expr_list_semicolon expr ';'

   53 expr_list_comma: expr
   54                | expr_list_comma ',' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 17 18 19 20 21 22 46
')' (41) 9 10 17 18 19 20 21 22 46
'*' (42) 39
'+' (43) 37
',' (44) 14 29 30 54
'-' (45) 38
'.' (46) 17 18 19 20
'/' (47) 40
':' (58) 9 10 11 12 15 27 28 29 30 32
';' (59) 4 5 7 8 32 51 52
'<' (60) 42
'=' (61) 44
'@' (64) 17 18
'{' (123) 4 5 9 10 25
'}' (125) 4 5 9 10 25
'~' (126) 41
error (256)
CLASS (258) 4 5
ELSE (259) 23
FI (260) 23
IF (261) 23
IN (262) 27 28
INHERITS (263) 5
LET (264) 26
LOOP (265) 24
POOL (266) 24
THEN (267) 23
WHILE (268) 24
CASE (269) 31
ESAC (270) 31
OF (271) 31
DARROW (272) 32
NEW (273) 35
ISVOID (274) 36
STR_CONST (275) 49
INT_CONST (276) 48
BOOL_CONST (277) 50
TYPEID (278) 4 5 9 10 11 12 15 17 18 27 28 29 30 32 35
OBJECTID (279) 9 10 11 12 15 16 17 18 19 20 21 22 27 28 29 30 32 47
ASSIGN (280) 12 16 28 30
NOT (281) 45
LE (282) 43
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5, on right: 2 3
feature_list (50)
    on left: 6 7 8, on right: 4 5 8
feature (51)
    on left: 9 10 11 12, on right: 7 8
formal_list (52)
    on left: 13 14, on right: 10 14
formal (53)
    on left: 15, on right: 13 14
expr (54)
    on left: 16 17 18 19 20 21 22 23 24 25 26 31 35 36 37 38 39 40
    41 42 43 44 45 46 47 48 49 50, on right: 9 10 12 16 17 18 19 20
    23 24 27 28 30 31 32 36 37 38 39 40 41 42 43 44 45 46 51 52 53
    54
let_list (55)
    on left: 27 28 29 30, on right: 26 29 30
case (56)
    on left: 32, on right: 33 34
case_list (57)
    on left: 33 34, on right: 31 34
expr_list_semicolon (58)
    on left: 51 52, on right: 25 52
expr_list_comma (59)
    on left: 53 54, on right: 17 19 21 54


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


state 11

    9 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . ':' TYPEID
   12        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 15
    ':'  shift, and go to state 16


state 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    7 feature_list: feature . ';'

    ';'  shift, and go to state 19


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 20
    feature       go to state 13


state 15

    9 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 21
    ')'       shift, and go to state 22

    formal_list  go to state 23
    formal       go to state 24


state 16

   11 feature: OBJECTID ':' . TYPEID
   12        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 25


state 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 26


state 18

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 27


state 19

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


state 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 28

    feature  go to state 18


state 21

   15 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 29


state 22

    9 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 30


state 23

   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   14 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 31
    ','  shift, and go to state 32


state 24

   13 formal_list: formal .

    $default  reduce using rule 13 (formal_list)


state 25

   11 feature: OBJECTID ':' TYPEID .
   12        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 33

    $default  reduce using rule 11 (feature)


state 26

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 27

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


state 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 34


state 29

   15 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 35


state 30

    9 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 36


state 31

   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 37


state 32

   14 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 21

    formal  go to state 38


state 33

   12 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 53


state 34

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 35

   15 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 15 (formal)


state 36

    9 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 54


state 37

   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 55


state 38

   14 formal_list: formal_list ',' formal .

    $default  reduce using rule 14 (formal_list)


state 39

   23 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 56


state 40

   26 expr: LET . let_list

    OBJECTID  shift, and go to state 57

    let_list  go to state 58


state 41

   24 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 59


state 42

   31 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 60


state 43

   35 expr: NEW . TYPEID

    TYPEID  shift, and go to state 61


state 44

   36 expr: ISVOID . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 62


state 45

   49 expr: STR_CONST .

    $default  reduce using rule 49 (expr)


state 46

   48 expr: INT_CONST .

    $default  reduce using rule 48 (expr)


state 47

   50 expr: BOOL_CONST .

    $default  reduce using rule 50 (expr)


state 48

   16 expr: OBJECTID . ASSIGN expr
   21     | OBJECTID . '(' expr_list_comma ')'
   22     | OBJECTID . '(' ')'
   47     | OBJECTID .

    ASSIGN  shift, and go to state 63
    '('     shift, and go to state 64

    $default  reduce using rule 47 (expr)


state 49

   45 expr: NOT . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 65


state 50

   41 expr: '~' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 66


state 51

   25 expr: '{' . expr_list_semicolon '}'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr                 go to state 67
    expr_list_semicolon  go to state 68


state 52

   46 expr: '(' . expr ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 69


state 53

   12 feature: OBJECTID ':' TYPEID ASSIGN expr .
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 12 (feature)


state 54

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 79


state 55

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 80


state 56

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr . THEN expr ELSE expr FI
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    THEN  shift, and go to state 81
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


state 57

   27 let_list: OBJECTID . ':' TYPEID IN expr
   28         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   29         | OBJECTID . ':' TYPEID ',' let_list
   30         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list

    ':'  shift, and go to state 82


state 58

   26 expr: LET let_list .

    $default  reduce using rule 26 (expr)


state 59

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   24     | WHILE expr . LOOP expr POOL
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LOOP  shift, and go to state 83
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


state 60

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   31     | CASE expr . OF case_list ESAC
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    OF   shift, and go to state 84
    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78


state 61

   35 expr: NEW TYPEID .

    $default  reduce using rule 35 (expr)


state 62

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   36     | ISVOID expr .
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 36 (expr)


state 63

   16 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 85


state 64

   21 expr: OBJECTID '(' . expr_list_comma ')'
   22     | OBJECTID '(' . ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52
    ')'         shift, and go to state 86

    expr             go to state 87
    expr_list_comma  go to state 88


state 65

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   45     | NOT expr .

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 45 (expr)


state 66

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   41     | '~' expr .
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 41 (expr)


state 67

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   51 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ';'  shift, and go to state 89


state 68

   25 expr: '{' expr_list_semicolon . '}'
   52 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '}'         shift, and go to state 90
    '('         shift, and go to state 52

    expr  go to state 91


state 69

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   46     | '(' expr . ')'

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ')'  shift, and go to state 92


state 70

   43 expr: expr LE . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 93


state 71

   42 expr: expr '<' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 94


state 72

   44 expr: expr '=' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 95


state 73

   37 expr: expr '+' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 96


state 74

   38 expr: expr '-' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 97


state 75

   39 expr: expr '*' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 98


state 76

   40 expr: expr '/' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 99


state 77

   17 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 100


state 78

   19 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   20     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 101


state 79

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    '}'  shift, and go to state 102


state 80

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 103


state 81

   23 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 104


state 82

   27 let_list: OBJECTID ':' . TYPEID IN expr
   28         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   29         | OBJECTID ':' . TYPEID ',' let_list
   30         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list

    TYPEID  shift, and go to state 105


state 83

   24 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 106


state 84

   31 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 107

    case       go to state 108
    case_list  go to state 109


state 85

   16 expr: OBJECTID ASSIGN expr .
   17     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 16 (expr)


state 86

   22 expr: OBJECTID '(' ')' .

    $default  reduce using rule 22 (expr)


state 87

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   53 expr_list_comma: expr .

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 53 (expr_list_comma)


state 88

   21 expr: OBJECTID '(' expr_list_comma . ')'
   54 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


state 89

   51 expr_list_semicolon: expr ';' .

    $default  reduce using rule 51 (expr_list_semicolon)


state 90

   25 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 25 (expr)


state 91

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   52 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ';'  shift, and go to state 112


state 92

   46 expr: '(' expr ')' .

    $default  reduce using rule 46 (expr)


state 93

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   43     | expr LE expr .
   44     | expr . '=' expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 43 (expr)


state 94

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   42     | expr '<' expr .
   43     | expr . LE expr
   44     | expr . '=' expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 42 (expr)


state 95

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   44     | expr '=' expr .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 44 (expr)


state 96

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   37     | expr '+' expr .
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 37 (expr)


state 97

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   38     | expr '-' expr .
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 38 (expr)


state 98

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   39     | expr '*' expr .
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 39 (expr)


state 99

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   40     | expr '/' expr .
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 40 (expr)


state 100

   17 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 113


state 101

   19 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   20     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 114


state 102

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)


state 103

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    '}'  shift, and go to state 115


state 104

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr THEN expr . ELSE expr FI
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    ELSE  shift, and go to state 116
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


state 105

   27 let_list: OBJECTID ':' TYPEID . IN expr
   28         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   29         | OBJECTID ':' TYPEID . ',' let_list
   30         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list

    IN      shift, and go to state 117
    ASSIGN  shift, and go to state 118
    ','     shift, and go to state 119


state 106

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   24     | WHILE expr LOOP expr . POOL
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    POOL  shift, and go to state 120
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


state 107

   32 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 121


state 108

   33 case_list: case .

    $default  reduce using rule 33 (case_list)


state 109

   31 expr: CASE expr OF case_list . ESAC
   34 case_list: case_list . case

    ESAC      shift, and go to state 122
    OBJECTID  shift, and go to state 107

    case  go to state 123


state 110

   21 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 21 (expr)


state 111

   54 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 124


state 112

   52 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 52 (expr_list_semicolon)


state 113

   17 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 125


state 114

   19 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   20     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52
    ')'         shift, and go to state 126

    expr             go to state 87
    expr_list_comma  go to state 127


state 115

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 116

   23 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 128


state 117

   27 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 129


state 118

   28 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   30         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 130


state 119

   29 let_list: OBJECTID ':' TYPEID ',' . let_list

    OBJECTID  shift, and go to state 57

    let_list  go to state 131


state 120

   24 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 24 (expr)


state 121

   32 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 132


state 122

   31 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 31 (expr)


state 123

   34 case_list: case_list case .

    $default  reduce using rule 34 (case_list)


state 124

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr
   54 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 54 (expr_list_comma)


state 125

   17 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 133


state 126

   20 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 20 (expr)


state 127

   19 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   54 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 134
    ','  shift, and go to state 111


state 128

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr THEN expr ELSE expr . FI
   37     | expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    FI   shift, and go to state 135
    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78


state 129

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   27 let_list: OBJECTID ':' TYPEID IN expr .
   37 expr: expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 27 (let_list)


state 130

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   28 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   30         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   37 expr: expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    IN   shift, and go to state 136
    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ','  shift, and go to state 137


state 131

   29 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 29 (let_list)


state 132

   32 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 138


state 133

   17 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52
    ')'         shift, and go to state 139

    expr             go to state 87
    expr_list_comma  go to state 140


state 134

   19 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 19 (expr)


state 135

   23 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 23 (expr)


state 136

   28 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 141


state 137

   30 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    OBJECTID  shift, and go to state 57

    let_list  go to state 142


state 138

   32 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '~'         shift, and go to state 50
    '{'         shift, and go to state 51
    '('         shift, and go to state 52

    expr  go to state 143


state 139

   18 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 18 (expr)


state 140

   17 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   54 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 144
    ','  shift, and go to state 111


state 141

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   28 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   37 expr: expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 28 (let_list)


state 142

   30 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 30 (let_list)


state 143

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32 case: OBJECTID ':' TYPEID DARROW expr . ';'
   37 expr: expr . '+' expr
   38     | expr . '-' expr
   39     | expr . '*' expr
   40     | expr . '/' expr
   42     | expr . '<' expr
   43     | expr . LE expr
   44     | expr . '=' expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ';'  shift, and go to state 145


state 144

   17 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 17 (expr)


state 145

   32 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 32 (case)
