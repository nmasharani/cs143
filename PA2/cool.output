Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS TYPEID '{' '}' ';'
    7      | CLASS TYPEID INHERITS TYPEID '{' '}' ';'
    8      | CLASS TYPEID '{' error '}' ';'
    9      | CLASS TYPEID INHERITS TYPEID '{' error '}' ';'
   10      | CLASS error '{' '}' ';'
   11      | CLASS error '{' error '}' ';'

   12 feature_list: feature ';'
   13             | feature_list feature ';'

   14 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   15        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   16        | OBJECTID ':' TYPEID
   17        | OBJECTID ':' TYPEID ASSIGN expr

   18 formal_list: formal
   19            | formal_list ',' formal

   20 formal: OBJECTID ':' TYPEID

   21 expr: OBJECTID ASSIGN expr
   22     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr '.' OBJECTID '(' expr_list_comma ')'
   25     | expr '.' OBJECTID '(' ')'
   26     | OBJECTID '(' expr_list_comma ')'
   27     | OBJECTID '(' ')'
   28     | IF expr THEN expr ELSE expr FI
   29     | WHILE expr LOOP expr POOL
   30     | '{' expr_list_semicolon '}'
   31     | LET let_list

   32 let_list: OBJECTID ':' TYPEID IN expr
   33         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   34         | OBJECTID ':' TYPEID ',' let_list
   35         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list

   36 expr: CASE expr OF case_list ESAC

   37 case: OBJECTID ':' TYPEID DARROW expr ';'

   38 case_list: case
   39          | case_list case

   40 expr: NEW TYPEID
   41     | ISVOID expr
   42     | expr '+' expr
   43     | expr '-' expr
   44     | expr '*' expr
   45     | expr '/' expr
   46     | '~' expr
   47     | expr '<' expr
   48     | expr LE expr
   49     | expr '=' expr
   50     | NOT expr
   51     | '(' expr ')'
   52     | OBJECTID
   53     | INT_CONST
   54     | STR_CONST
   55     | BOOL_CONST

   56 expr_list_semicolon: expr ';'
   57                    | expr_list_semicolon expr ';'

   58 expr_list_comma: expr
   59                | expr_list_comma ',' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 15 22 23 24 25 26 27 51
')' (41) 14 15 22 23 24 25 26 27 51
'*' (42) 44
'+' (43) 42
',' (44) 19 34 35 59
'-' (45) 43
'.' (46) 22 23 24 25
'/' (47) 45
':' (58) 14 15 16 17 20 32 33 34 35 37
';' (59) 4 5 6 7 8 9 10 11 12 13 37 56 57
'<' (60) 47
'=' (61) 49
'@' (64) 22 23
'{' (123) 4 5 6 7 8 9 10 11 14 15 30
'}' (125) 4 5 6 7 8 9 10 11 14 15 30
'~' (126) 46
error (256) 8 9 10 11
CLASS (258) 4 5 6 7 8 9 10 11
ELSE (259) 28
FI (260) 28
IF (261) 28
IN (262) 32 33
INHERITS (263) 5 7 9
LET (264) 31
LOOP (265) 29
POOL (266) 29
THEN (267) 28
WHILE (268) 29
CASE (269) 36
ESAC (270) 36
OF (271) 36
DARROW (272) 37
NEW (273) 40
ISVOID (274) 41
STR_CONST (275) 54
INT_CONST (276) 53
BOOL_CONST (277) 55
TYPEID (278) 4 5 6 7 8 9 14 15 16 17 20 22 23 32 33 34 35 37 40
OBJECTID (279) 14 15 16 17 20 21 22 23 24 25 26 27 32 33 34 35 37 52
ASSIGN (280) 17 21 33 35
NOT (281) 50
LE (282) 48
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
feature_list (50)
    on left: 12 13, on right: 4 5 13
feature (51)
    on left: 14 15 16 17, on right: 12 13
formal_list (52)
    on left: 18 19, on right: 15 19
formal (53)
    on left: 20, on right: 18 19
expr (54)
    on left: 21 22 23 24 25 26 27 28 29 30 31 36 40 41 42 43 44 45
    46 47 48 49 50 51 52 53 54 55, on right: 14 15 17 21 22 23 24 25
    28 29 32 33 35 36 37 41 42 43 44 45 46 47 48 49 50 51 56 57 58
    59
let_list (55)
    on left: 32 33 34 35, on right: 31 34 35
case (56)
    on left: 37, on right: 38 39
case_list (57)
    on left: 38 39, on right: 36 39
expr_list_semicolon (58)
    on left: 56 57, on right: 30 57
expr_list_comma (59)
    on left: 58 59, on right: 22 24 26 59


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS . TYPEID '{' '}' ';'
    7      | CLASS . TYPEID INHERITS TYPEID '{' '}' ';'
    8      | CLASS . TYPEID '{' error '}' ';'
    9      | CLASS . TYPEID INHERITS TYPEID '{' error '}' ';'
   10      | CLASS . error '{' '}' ';'
   11      | CLASS . error '{' error '}' ';'

    error   shift, and go to state 5
    TYPEID  shift, and go to state 6


state 2

    0 $accept: program . $end

    $end  shift, and go to state 7


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 8


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

   10 class: CLASS error . '{' '}' ';'
   11      | CLASS error . '{' error '}' ';'

    '{'  shift, and go to state 9


state 6

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS TYPEID . '{' '}' ';'
    7      | CLASS TYPEID . INHERITS TYPEID '{' '}' ';'
    8      | CLASS TYPEID . '{' error '}' ';'
    9      | CLASS TYPEID . INHERITS TYPEID '{' error '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


state 7

    0 $accept: program $end .

    $default  accept


state 8

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 9

   10 class: CLASS error '{' . '}' ';'
   11      | CLASS error '{' . error '}' ';'

    error  shift, and go to state 12
    '}'    shift, and go to state 13


state 10

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'
    7      | CLASS TYPEID INHERITS . TYPEID '{' '}' ';'
    9      | CLASS TYPEID INHERITS . TYPEID '{' error '}' ';'

    TYPEID  shift, and go to state 14


state 11

    4 class: CLASS TYPEID '{' . feature_list '}' ';'
    6      | CLASS TYPEID '{' . '}' ';'
    8      | CLASS TYPEID '{' . error '}' ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 17

    feature_list  go to state 18
    feature       go to state 19


state 12

   11 class: CLASS error '{' error . '}' ';'

    '}'  shift, and go to state 20


state 13

   10 class: CLASS error '{' '}' . ';'

    ';'  shift, and go to state 21


state 14

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'
    7      | CLASS TYPEID INHERITS TYPEID . '{' '}' ';'
    9      | CLASS TYPEID INHERITS TYPEID . '{' error '}' ';'

    '{'  shift, and go to state 22


state 15

    8 class: CLASS TYPEID '{' error . '}' ';'

    '}'  shift, and go to state 23


state 16

   14 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   15        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   16        | OBJECTID . ':' TYPEID
   17        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 24
    ':'  shift, and go to state 25


state 17

    6 class: CLASS TYPEID '{' '}' . ';'

    ';'  shift, and go to state 26


state 18

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
   13 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 27

    feature  go to state 28


state 19

   12 feature_list: feature . ';'

    ';'  shift, and go to state 29


state 20

   11 class: CLASS error '{' error '}' . ';'

    ';'  shift, and go to state 30


state 21

   10 class: CLASS error '{' '}' ';' .

    $default  reduce using rule 10 (class)


state 22

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'
    7      | CLASS TYPEID INHERITS TYPEID '{' . '}' ';'
    9      | CLASS TYPEID INHERITS TYPEID '{' . error '}' ';'

    error     shift, and go to state 31
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 32

    feature_list  go to state 33
    feature       go to state 19


state 23

    8 class: CLASS TYPEID '{' error '}' . ';'

    ';'  shift, and go to state 34


state 24

   14 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   15        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 35
    ')'       shift, and go to state 36

    formal_list  go to state 37
    formal       go to state 38


state 25

   16 feature: OBJECTID ':' . TYPEID
   17        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 39


state 26

    6 class: CLASS TYPEID '{' '}' ';' .

    $default  reduce using rule 6 (class)


state 27

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 40


state 28

   13 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 41


state 29

   12 feature_list: feature ';' .

    $default  reduce using rule 12 (feature_list)


state 30

   11 class: CLASS error '{' error '}' ';' .

    $default  reduce using rule 11 (class)


state 31

    9 class: CLASS TYPEID INHERITS TYPEID '{' error . '}' ';'

    '}'  shift, and go to state 42


state 32

    7 class: CLASS TYPEID INHERITS TYPEID '{' '}' . ';'

    ';'  shift, and go to state 43


state 33

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
   13 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 44

    feature  go to state 28


state 34

    8 class: CLASS TYPEID '{' error '}' ';' .

    $default  reduce using rule 8 (class)


state 35

   20 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 45


state 36

   14 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 46


state 37

   15 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   19 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 47
    ','  shift, and go to state 48


state 38

   18 formal_list: formal .

    $default  reduce using rule 18 (formal_list)


state 39

   16 feature: OBJECTID ':' TYPEID .
   17        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 16 (feature)


state 40

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 41

   13 feature_list: feature_list feature ';' .

    $default  reduce using rule 13 (feature_list)


state 42

    9 class: CLASS TYPEID INHERITS TYPEID '{' error '}' . ';'

    ';'  shift, and go to state 50


state 43

    7 class: CLASS TYPEID INHERITS TYPEID '{' '}' ';' .

    $default  reduce using rule 7 (class)


state 44

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 51


state 45

   20 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 52


state 46

   14 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 53


state 47

   15 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 54


state 48

   19 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 35

    formal  go to state 55


state 49

   17 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 70


state 50

    9 class: CLASS TYPEID INHERITS TYPEID '{' error '}' ';' .

    $default  reduce using rule 9 (class)


state 51

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 52

   20 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 20 (formal)


state 53

   14 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 71


state 54

   15 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 72


state 55

   19 formal_list: formal_list ',' formal .

    $default  reduce using rule 19 (formal_list)


state 56

   28 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 73


state 57

   31 expr: LET . let_list

    OBJECTID  shift, and go to state 74

    let_list  go to state 75


state 58

   29 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 76


state 59

   36 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 77


state 60

   40 expr: NEW . TYPEID

    TYPEID  shift, and go to state 78


state 61

   41 expr: ISVOID . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 79


state 62

   54 expr: STR_CONST .

    $default  reduce using rule 54 (expr)


state 63

   53 expr: INT_CONST .

    $default  reduce using rule 53 (expr)


state 64

   55 expr: BOOL_CONST .

    $default  reduce using rule 55 (expr)


state 65

   21 expr: OBJECTID . ASSIGN expr
   26     | OBJECTID . '(' expr_list_comma ')'
   27     | OBJECTID . '(' ')'
   52     | OBJECTID .

    ASSIGN  shift, and go to state 80
    '('     shift, and go to state 81

    $default  reduce using rule 52 (expr)


state 66

   50 expr: NOT . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 82


state 67

   46 expr: '~' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 83


state 68

   30 expr: '{' . expr_list_semicolon '}'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr                 go to state 84
    expr_list_semicolon  go to state 85


state 69

   51 expr: '(' . expr ')'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 86


state 70

   17 feature: OBJECTID ':' TYPEID ASSIGN expr .
   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 17 (feature)


state 71

   14 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 96


state 72

   15 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 97


state 73

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   28     | IF expr . THEN expr ELSE expr FI
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    THEN  shift, and go to state 98
    LE    shift, and go to state 87
    '<'   shift, and go to state 88
    '='   shift, and go to state 89
    '+'   shift, and go to state 90
    '-'   shift, and go to state 91
    '*'   shift, and go to state 92
    '/'   shift, and go to state 93
    '@'   shift, and go to state 94
    '.'   shift, and go to state 95


state 74

   32 let_list: OBJECTID . ':' TYPEID IN expr
   33         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   34         | OBJECTID . ':' TYPEID ',' let_list
   35         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list

    ':'  shift, and go to state 99


state 75

   31 expr: LET let_list .

    $default  reduce using rule 31 (expr)


state 76

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   29     | WHILE expr . LOOP expr POOL
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LOOP  shift, and go to state 100
    LE    shift, and go to state 87
    '<'   shift, and go to state 88
    '='   shift, and go to state 89
    '+'   shift, and go to state 90
    '-'   shift, and go to state 91
    '*'   shift, and go to state 92
    '/'   shift, and go to state 93
    '@'   shift, and go to state 94
    '.'   shift, and go to state 95


state 77

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   36     | CASE expr . OF case_list ESAC
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    OF   shift, and go to state 101
    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95


state 78

   40 expr: NEW TYPEID .

    $default  reduce using rule 40 (expr)


state 79

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   41     | ISVOID expr .
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 41 (expr)


state 80

   21 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 102


state 81

   26 expr: OBJECTID '(' . expr_list_comma ')'
   27     | OBJECTID '(' . ')'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69
    ')'         shift, and go to state 103

    expr             go to state 104
    expr_list_comma  go to state 105


state 82

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   50     | NOT expr .

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 50 (expr)


state 83

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | '~' expr .
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 46 (expr)


state 84

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   56 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    ';'  shift, and go to state 106


state 85

   30 expr: '{' expr_list_semicolon . '}'
   57 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '}'         shift, and go to state 107
    '('         shift, and go to state 69

    expr  go to state 108


state 86

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   51     | '(' expr . ')'

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    ')'  shift, and go to state 109


state 87

   48 expr: expr LE . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 110


state 88

   47 expr: expr '<' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 111


state 89

   49 expr: expr '=' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 112


state 90

   42 expr: expr '+' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 113


state 91

   43 expr: expr '-' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 114


state 92

   44 expr: expr '*' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 115


state 93

   45 expr: expr '/' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 116


state 94

   22 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 117


state 95

   24 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   25     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 118


state 96

   14 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    '}'  shift, and go to state 119


state 97

   15 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 120


state 98

   28 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 121


state 99

   32 let_list: OBJECTID ':' . TYPEID IN expr
   33         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   34         | OBJECTID ':' . TYPEID ',' let_list
   35         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list

    TYPEID  shift, and go to state 122


state 100

   29 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 123


state 101

   36 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 124

    case       go to state 125
    case_list  go to state 126


state 102

   21 expr: OBJECTID ASSIGN expr .
   22     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 21 (expr)


state 103

   27 expr: OBJECTID '(' ')' .

    $default  reduce using rule 27 (expr)


state 104

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   58 expr_list_comma: expr .

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 58 (expr_list_comma)


state 105

   26 expr: OBJECTID '(' expr_list_comma . ')'
   59 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 127
    ','  shift, and go to state 128


state 106

   56 expr_list_semicolon: expr ';' .

    $default  reduce using rule 56 (expr_list_semicolon)


state 107

   30 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 30 (expr)


state 108

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   57 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    ';'  shift, and go to state 129


state 109

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


state 110

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   48     | expr LE expr .
   49     | expr . '=' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 48 (expr)


state 111

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   47     | expr '<' expr .
   48     | expr . LE expr
   49     | expr . '=' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 47 (expr)


state 112

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   49     | expr '=' expr .

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 49 (expr)


state 113

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   42     | expr '+' expr .
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 42 (expr)


state 114

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   43     | expr '-' expr .
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 43 (expr)


state 115

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   44     | expr '*' expr .
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 44 (expr)


state 116

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   45     | expr '/' expr .
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 45 (expr)


state 117

   22 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 130


state 118

   24 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   25     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 131


state 119

   14 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 14 (feature)


state 120

   15 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    '}'  shift, and go to state 132


state 121

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   28     | IF expr THEN expr . ELSE expr FI
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    ELSE  shift, and go to state 133
    LE    shift, and go to state 87
    '<'   shift, and go to state 88
    '='   shift, and go to state 89
    '+'   shift, and go to state 90
    '-'   shift, and go to state 91
    '*'   shift, and go to state 92
    '/'   shift, and go to state 93
    '@'   shift, and go to state 94
    '.'   shift, and go to state 95


state 122

   32 let_list: OBJECTID ':' TYPEID . IN expr
   33         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   34         | OBJECTID ':' TYPEID . ',' let_list
   35         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list

    IN      shift, and go to state 134
    ASSIGN  shift, and go to state 135
    ','     shift, and go to state 136


state 123

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   29     | WHILE expr LOOP expr . POOL
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    POOL  shift, and go to state 137
    LE    shift, and go to state 87
    '<'   shift, and go to state 88
    '='   shift, and go to state 89
    '+'   shift, and go to state 90
    '-'   shift, and go to state 91
    '*'   shift, and go to state 92
    '/'   shift, and go to state 93
    '@'   shift, and go to state 94
    '.'   shift, and go to state 95


state 124

   37 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 138


state 125

   38 case_list: case .

    $default  reduce using rule 38 (case_list)


state 126

   36 expr: CASE expr OF case_list . ESAC
   39 case_list: case_list . case

    ESAC      shift, and go to state 139
    OBJECTID  shift, and go to state 124

    case  go to state 140


state 127

   26 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 26 (expr)


state 128

   59 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 141


state 129

   57 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 57 (expr_list_semicolon)


state 130

   22 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   23     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 142


state 131

   24 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   25     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69
    ')'         shift, and go to state 143

    expr             go to state 104
    expr_list_comma  go to state 144


state 132

   15 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 15 (feature)


state 133

   28 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 145


state 134

   32 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 146


state 135

   33 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   35         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 147


state 136

   34 let_list: OBJECTID ':' TYPEID ',' . let_list

    OBJECTID  shift, and go to state 74

    let_list  go to state 148


state 137

   29 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 29 (expr)


state 138

   37 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 149


state 139

   36 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 36 (expr)


state 140

   39 case_list: case_list case .

    $default  reduce using rule 39 (case_list)


state 141

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr
   59 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 59 (expr_list_comma)


state 142

   22 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   23     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 150


state 143

   25 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 25 (expr)


state 144

   24 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   59 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 151
    ','  shift, and go to state 128


state 145

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   28     | IF expr THEN expr ELSE expr . FI
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    FI   shift, and go to state 152
    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95


state 146

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   32 let_list: OBJECTID ':' TYPEID IN expr .
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 32 (let_list)


state 147

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   33 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   35         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    IN   shift, and go to state 153
    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    ','  shift, and go to state 154


state 148

   34 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 34 (let_list)


state 149

   37 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 155


state 150

   22 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69
    ')'         shift, and go to state 156

    expr             go to state 104
    expr_list_comma  go to state 157


state 151

   24 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 24 (expr)


state 152

   28 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 28 (expr)


state 153

   33 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 158


state 154

   35 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    OBJECTID  shift, and go to state 74

    let_list  go to state 159


state 155

   37 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 56
    LET         shift, and go to state 57
    WHILE       shift, and go to state 58
    CASE        shift, and go to state 59
    NEW         shift, and go to state 60
    ISVOID      shift, and go to state 61
    STR_CONST   shift, and go to state 62
    INT_CONST   shift, and go to state 63
    BOOL_CONST  shift, and go to state 64
    OBJECTID    shift, and go to state 65
    NOT         shift, and go to state 66
    '~'         shift, and go to state 67
    '{'         shift, and go to state 68
    '('         shift, and go to state 69

    expr  go to state 160


state 156

   23 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 23 (expr)


state 157

   22 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   59 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 161
    ','  shift, and go to state 128


state 158

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   33 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 33 (let_list)


state 159

   35 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 35 (let_list)


state 160

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   37 case: OBJECTID ':' TYPEID DARROW expr . ';'
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   47     | expr . '<' expr
   48     | expr . LE expr
   49     | expr . '=' expr

    LE   shift, and go to state 87
    '<'  shift, and go to state 88
    '='  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '@'  shift, and go to state 94
    '.'  shift, and go to state 95
    ';'  shift, and go to state 162


state 161

   22 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 22 (expr)


state 162

   37 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 37 (case)
