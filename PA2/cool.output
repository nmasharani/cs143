Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS TYPEID '{' '}' ';'
    7      | CLASS TYPEID INHERITS TYPEID '{' '}' ';'

    8 feature_list: feature ';'
    9             | feature_list feature ';'

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID ':' TYPEID
   13        | OBJECTID ':' TYPEID ASSIGN expr

   14 formal_list: formal
   15            | formal_list ',' formal

   16 formal: OBJECTID ':' TYPEID

   17 expr: OBJECTID ASSIGN expr
   18     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr '.' OBJECTID '(' expr_list_comma ')'
   21     | expr '.' OBJECTID '(' ')'
   22     | OBJECTID '(' expr_list_comma ')'
   23     | OBJECTID '(' ')'
   24     | IF expr THEN expr ELSE expr FI
   25     | WHILE expr LOOP expr POOL
   26     | '{' expr_list_semicolon '}'
   27     | LET let_list

   28 let_list: OBJECTID ':' TYPEID IN expr
   29         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   30         | OBJECTID ':' TYPEID ',' let_list
   31         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list

   32 expr: CASE expr OF case_list ESAC

   33 case: OBJECTID ':' TYPEID DARROW expr ';'

   34 case_list: case
   35          | case_list case

   36 expr: NEW TYPEID
   37     | ISVOID expr
   38     | expr '+' expr
   39     | expr '-' expr
   40     | expr '*' expr
   41     | expr '/' expr
   42     | '~' expr
   43     | expr '<' expr
   44     | expr LE expr
   45     | expr '=' expr
   46     | NOT expr
   47     | '(' expr ')'
   48     | OBJECTID
   49     | INT_CONST
   50     | STR_CONST
   51     | BOOL_CONST

   52 expr_list_semicolon: expr ';'
   53                    | expr_list_semicolon expr ';'

   54 expr_list_comma: expr
   55                | expr_list_comma ',' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 18 19 20 21 22 23 47
')' (41) 10 11 18 19 20 21 22 23 47
'*' (42) 40
'+' (43) 38
',' (44) 15 30 31 55
'-' (45) 39
'.' (46) 18 19 20 21
'/' (47) 41
':' (58) 10 11 12 13 16 28 29 30 31 33
';' (59) 4 5 6 7 8 9 33 52 53
'<' (60) 43
'=' (61) 45
'@' (64) 18 19
'{' (123) 4 5 6 7 10 11 26
'}' (125) 4 5 6 7 10 11 26
'~' (126) 42
error (256)
CLASS (258) 4 5 6 7
ELSE (259) 24
FI (260) 24
IF (261) 24
IN (262) 28 29
INHERITS (263) 5 7
LET (264) 27
LOOP (265) 25
POOL (266) 25
THEN (267) 24
WHILE (268) 25
CASE (269) 32
ESAC (270) 32
OF (271) 32
DARROW (272) 33
NEW (273) 36
ISVOID (274) 37
STR_CONST (275) 50
INT_CONST (276) 49
BOOL_CONST (277) 51
TYPEID (278) 4 5 6 7 10 11 12 13 16 18 19 28 29 30 31 33 36
OBJECTID (279) 10 11 12 13 16 17 18 19 20 21 22 23 28 29 30 31 33 48
ASSIGN (280) 13 17 29 31
NOT (281) 46
LE (282) 44
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5 6 7, on right: 2 3
feature_list (50)
    on left: 8 9, on right: 4 5 9
feature (51)
    on left: 10 11 12 13, on right: 8 9
formal_list (52)
    on left: 14 15, on right: 11 15
formal (53)
    on left: 16, on right: 14 15
expr (54)
    on left: 17 18 19 20 21 22 23 24 25 26 27 32 36 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51, on right: 10 11 13 17 18 19 20 21
    24 25 28 29 31 32 33 37 38 39 40 41 42 43 44 45 46 47 52 53 54
    55
let_list (55)
    on left: 28 29 30 31, on right: 27 30 31
case (56)
    on left: 33, on right: 34 35
case_list (57)
    on left: 34 35, on right: 32 35
expr_list_semicolon (58)
    on left: 52 53, on right: 26 53
expr_list_comma (59)
    on left: 54 55, on right: 18 20 22 55


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS . TYPEID '{' '}' ';'
    7      | CLASS . TYPEID INHERITS TYPEID '{' '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS TYPEID . '{' '}' ';'
    7      | CLASS TYPEID . INHERITS TYPEID '{' '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'
    7      | CLASS TYPEID INHERITS . TYPEID '{' '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'
    6      | CLASS TYPEID '{' . '}' ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 12

    feature_list  go to state 13
    feature       go to state 14


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'
    7      | CLASS TYPEID INHERITS TYPEID . '{' '}' ';'

    '{'  shift, and go to state 15


state 11

   10 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID . ':' TYPEID
   13        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 16
    ':'  shift, and go to state 17


state 12

    6 class: CLASS TYPEID '{' '}' . ';'

    ';'  shift, and go to state 18


state 13

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 19

    feature  go to state 20


state 14

    8 feature_list: feature . ';'

    ';'  shift, and go to state 21


state 15

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'
    7      | CLASS TYPEID INHERITS TYPEID '{' . '}' ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 22

    feature_list  go to state 23
    feature       go to state 14


state 16

   10 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 24
    ')'       shift, and go to state 25

    formal_list  go to state 26
    formal       go to state 27


state 17

   12 feature: OBJECTID ':' . TYPEID
   13        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 28


state 18

    6 class: CLASS TYPEID '{' '}' ';' .

    $default  reduce using rule 6 (class)


state 19

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 29


state 20

    9 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 30


state 21

    8 feature_list: feature ';' .

    $default  reduce using rule 8 (feature_list)


state 22

    7 class: CLASS TYPEID INHERITS TYPEID '{' '}' . ';'

    ';'  shift, and go to state 31


state 23

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    9 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 32

    feature  go to state 20


state 24

   16 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 33


state 25

   10 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 34


state 26

   11 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   15 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 35
    ','  shift, and go to state 36


state 27

   14 formal_list: formal .

    $default  reduce using rule 14 (formal_list)


state 28

   12 feature: OBJECTID ':' TYPEID .
   13        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 37

    $default  reduce using rule 12 (feature)


state 29

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 30

    9 feature_list: feature_list feature ';' .

    $default  reduce using rule 9 (feature_list)


state 31

    7 class: CLASS TYPEID INHERITS TYPEID '{' '}' ';' .

    $default  reduce using rule 7 (class)


state 32

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 38


state 33

   16 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 39


state 34

   10 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 40


state 35

   11 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 41


state 36

   15 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 24

    formal  go to state 42


state 37

   13 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 57


state 38

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 39

   16 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 16 (formal)


state 40

   10 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 58


state 41

   11 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 59


state 42

   15 formal_list: formal_list ',' formal .

    $default  reduce using rule 15 (formal_list)


state 43

   24 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 60


state 44

   27 expr: LET . let_list

    OBJECTID  shift, and go to state 61

    let_list  go to state 62


state 45

   25 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 63


state 46

   32 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 64


state 47

   36 expr: NEW . TYPEID

    TYPEID  shift, and go to state 65


state 48

   37 expr: ISVOID . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 66


state 49

   50 expr: STR_CONST .

    $default  reduce using rule 50 (expr)


state 50

   49 expr: INT_CONST .

    $default  reduce using rule 49 (expr)


state 51

   51 expr: BOOL_CONST .

    $default  reduce using rule 51 (expr)


state 52

   17 expr: OBJECTID . ASSIGN expr
   22     | OBJECTID . '(' expr_list_comma ')'
   23     | OBJECTID . '(' ')'
   48     | OBJECTID .

    ASSIGN  shift, and go to state 67
    '('     shift, and go to state 68

    $default  reduce using rule 48 (expr)


state 53

   46 expr: NOT . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 69


state 54

   42 expr: '~' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 70


state 55

   26 expr: '{' . expr_list_semicolon '}'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr                 go to state 71
    expr_list_semicolon  go to state 72


state 56

   47 expr: '(' . expr ')'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 73


state 57

   13 feature: OBJECTID ':' TYPEID ASSIGN expr .
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 13 (feature)


state 58

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 83


state 59

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 84


state 60

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   24     | IF expr . THEN expr ELSE expr FI
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    THEN  shift, and go to state 85
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 81
    '.'   shift, and go to state 82


state 61

   28 let_list: OBJECTID . ':' TYPEID IN expr
   29         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   30         | OBJECTID . ':' TYPEID ',' let_list
   31         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list

    ':'  shift, and go to state 86


state 62

   27 expr: LET let_list .

    $default  reduce using rule 27 (expr)


state 63

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   25     | WHILE expr . LOOP expr POOL
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LOOP  shift, and go to state 87
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 81
    '.'   shift, and go to state 82


state 64

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   32     | CASE expr . OF case_list ESAC
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    OF   shift, and go to state 88
    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82


state 65

   36 expr: NEW TYPEID .

    $default  reduce using rule 36 (expr)


state 66

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   37     | ISVOID expr .
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 37 (expr)


state 67

   17 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 89


state 68

   22 expr: OBJECTID '(' . expr_list_comma ')'
   23     | OBJECTID '(' . ')'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56
    ')'         shift, and go to state 90

    expr             go to state 91
    expr_list_comma  go to state 92


state 69

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   46     | NOT expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 46 (expr)


state 70

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | '~' expr .
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 42 (expr)


state 71

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   52 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    ';'  shift, and go to state 93


state 72

   26 expr: '{' expr_list_semicolon . '}'
   53 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '}'         shift, and go to state 94
    '('         shift, and go to state 56

    expr  go to state 95


state 73

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   47     | '(' expr . ')'

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    ')'  shift, and go to state 96


state 74

   44 expr: expr LE . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 97


state 75

   43 expr: expr '<' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 98


state 76

   45 expr: expr '=' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 99


state 77

   38 expr: expr '+' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 100


state 78

   39 expr: expr '-' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 101


state 79

   40 expr: expr '*' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 102


state 80

   41 expr: expr '/' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 103


state 81

   18 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 104


state 82

   20 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   21     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 105


state 83

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    '}'  shift, and go to state 106


state 84

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 107


state 85

   24 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 108


state 86

   28 let_list: OBJECTID ':' . TYPEID IN expr
   29         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   30         | OBJECTID ':' . TYPEID ',' let_list
   31         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list

    TYPEID  shift, and go to state 109


state 87

   25 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 110


state 88

   32 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 111

    case       go to state 112
    case_list  go to state 113


state 89

   17 expr: OBJECTID ASSIGN expr .
   18     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 17 (expr)


state 90

   23 expr: OBJECTID '(' ')' .

    $default  reduce using rule 23 (expr)


state 91

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   54 expr_list_comma: expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 54 (expr_list_comma)


state 92

   22 expr: OBJECTID '(' expr_list_comma . ')'
   55 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 114
    ','  shift, and go to state 115


state 93

   52 expr_list_semicolon: expr ';' .

    $default  reduce using rule 52 (expr_list_semicolon)


state 94

   26 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 26 (expr)


state 95

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   53 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    ';'  shift, and go to state 116


state 96

   47 expr: '(' expr ')' .

    $default  reduce using rule 47 (expr)


state 97

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   44     | expr LE expr .
   45     | expr . '=' expr

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 44 (expr)


state 98

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   43     | expr '<' expr .
   44     | expr . LE expr
   45     | expr . '=' expr

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 43 (expr)


state 99

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   45     | expr '=' expr .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 45 (expr)


state 100

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   38     | expr '+' expr .
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 38 (expr)


state 101

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   39     | expr '-' expr .
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 39 (expr)


state 102

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   40     | expr '*' expr .
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 40 (expr)


state 103

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   41     | expr '/' expr .
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 41 (expr)


state 104

   18 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   19     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 117


state 105

   20 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   21     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 118


state 106

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 107

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    '}'  shift, and go to state 119


state 108

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   24     | IF expr THEN expr . ELSE expr FI
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    ELSE  shift, and go to state 120
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 81
    '.'   shift, and go to state 82


state 109

   28 let_list: OBJECTID ':' TYPEID . IN expr
   29         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   30         | OBJECTID ':' TYPEID . ',' let_list
   31         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list

    IN      shift, and go to state 121
    ASSIGN  shift, and go to state 122
    ','     shift, and go to state 123


state 110

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   25     | WHILE expr LOOP expr . POOL
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    POOL  shift, and go to state 124
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 81
    '.'   shift, and go to state 82


state 111

   33 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 125


state 112

   34 case_list: case .

    $default  reduce using rule 34 (case_list)


state 113

   32 expr: CASE expr OF case_list . ESAC
   35 case_list: case_list . case

    ESAC      shift, and go to state 126
    OBJECTID  shift, and go to state 111

    case  go to state 127


state 114

   22 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 22 (expr)


state 115

   55 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 128


state 116

   53 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 53 (expr_list_semicolon)


state 117

   18 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   19     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 129


state 118

   20 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   21     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56
    ')'         shift, and go to state 130

    expr             go to state 91
    expr_list_comma  go to state 131


state 119

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 11 (feature)


state 120

   24 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 132


state 121

   28 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 133


state 122

   29 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   31         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 134


state 123

   30 let_list: OBJECTID ':' TYPEID ',' . let_list

    OBJECTID  shift, and go to state 61

    let_list  go to state 135


state 124

   25 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 25 (expr)


state 125

   33 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 136


state 126

   32 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 32 (expr)


state 127

   35 case_list: case_list case .

    $default  reduce using rule 35 (case_list)


state 128

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr
   55 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 55 (expr_list_comma)


state 129

   18 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   19     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 137


state 130

   21 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 21 (expr)


state 131

   20 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   55 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 138
    ','  shift, and go to state 115


state 132

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   24     | IF expr THEN expr ELSE expr . FI
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    FI   shift, and go to state 139
    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82


state 133

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   28 let_list: OBJECTID ':' TYPEID IN expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 28 (let_list)


state 134

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   29 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   31         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    IN   shift, and go to state 140
    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    ','  shift, and go to state 141


state 135

   30 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 30 (let_list)


state 136

   33 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 142


state 137

   18 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   19     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56
    ')'         shift, and go to state 143

    expr             go to state 91
    expr_list_comma  go to state 144


state 138

   20 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 20 (expr)


state 139

   24 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 24 (expr)


state 140

   29 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 145


state 141

   31 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    OBJECTID  shift, and go to state 61

    let_list  go to state 146


state 142

   33 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 43
    LET         shift, and go to state 44
    WHILE       shift, and go to state 45
    CASE        shift, and go to state 46
    NEW         shift, and go to state 47
    ISVOID      shift, and go to state 48
    STR_CONST   shift, and go to state 49
    INT_CONST   shift, and go to state 50
    BOOL_CONST  shift, and go to state 51
    OBJECTID    shift, and go to state 52
    NOT         shift, and go to state 53
    '~'         shift, and go to state 54
    '{'         shift, and go to state 55
    '('         shift, and go to state 56

    expr  go to state 147


state 143

   19 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 19 (expr)


state 144

   18 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   55 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 148
    ','  shift, and go to state 115


state 145

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   29 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82

    $default  reduce using rule 29 (let_list)


state 146

   31 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 31 (let_list)


state 147

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   33 case: OBJECTID ':' TYPEID DARROW expr . ';'
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   43     | expr . '<' expr
   44     | expr . LE expr
   45     | expr . '=' expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 81
    '.'  shift, and go to state 82
    ';'  shift, and go to state 149


state 148

   18 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 18 (expr)


state 149

   33 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 33 (case)
