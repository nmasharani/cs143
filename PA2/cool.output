Terminals unused in grammar

   IN
   LET
   ERROR


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature
    8             | feature_list feature

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID ':' TYPEID
   12        | OBJECTID ':' TYPEID ASSIGN expr

   13 formal_list: formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 expr: OBJECTID ASSIGN expr
   17     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr '.' OBJECTID '(' expr_list_comma ')'
   20     | expr '.' OBJECTID '(' ')'
   21     | OBJECTID '(' expr_list_comma ')'
   22     | OBJECTID '(' ')'
   23     | IF expr THEN expr ELSE expr FI
   24     | WHILE expr LOOP expr POOL
   25     | '{' expr_list_semicolon '}'
   26     | CASE expr OF case_list ESAC

   27 case: OBJECTID ':' TYPEID DARROW expr ';'

   28 case_list: case
   29          | case_list case

   30 expr: NEW TYPEID
   31     | ISVOID expr
   32     | expr '+' expr
   33     | expr '-' expr
   34     | expr '*' expr
   35     | expr '/' expr
   36     | '~' expr
   37     | expr '<' expr
   38     | expr LE expr
   39     | expr '=' expr
   40     | NOT expr
   41     | '(' expr ')'
   42     | OBJECTID
   43     | INT_CONST
   44     | STR_CONST
   45     | BOOL_CONST

   46 expr_list_semicolon: expr ';'
   47                    | expr_list_semicolon expr ';'

   48 expr_list_comma: expr
   49                | expr_list_comma ',' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 17 18 19 20 21 22 41
')' (41) 9 10 17 18 19 20 21 22 41
'*' (42) 34
'+' (43) 32
',' (44) 14 49
'-' (45) 33
'.' (46) 17 18 19 20
'/' (47) 35
':' (58) 9 10 11 12 15 27
';' (59) 4 5 27 46 47
'<' (60) 37
'=' (61) 39
'@' (64) 17 18
'{' (123) 4 5 9 10 25
'}' (125) 4 5 9 10 25
'~' (126) 36
error (256)
CLASS (258) 4 5
ELSE (259) 23
FI (260) 23
IF (261) 23
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265) 24
POOL (266) 24
THEN (267) 23
WHILE (268) 24
CASE (269) 26
ESAC (270) 26
OF (271) 26
DARROW (272) 27
NEW (273) 30
ISVOID (274) 31
STR_CONST (275) 44
INT_CONST (276) 43
BOOL_CONST (277) 45
TYPEID (278) 4 5 9 10 11 12 15 17 18 27 30
OBJECTID (279) 9 10 11 12 15 16 17 18 19 20 21 22 27 42
ASSIGN (280) 12 16
NOT (281) 40
LE (282) 38
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
feature_list (49)
    on left: 6 7 8, on right: 4 5 8
feature (50)
    on left: 9 10 11 12, on right: 7 8
formal_list (51)
    on left: 13 14, on right: 10 14
formal (52)
    on left: 15, on right: 13 14
expr (53)
    on left: 16 17 18 19 20 21 22 23 24 25 26 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45, on right: 9 10 12 16 17 18 19 20 23
    24 26 27 31 32 33 34 35 36 37 38 39 40 41 46 47 48 49
case (54)
    on left: 27, on right: 28 29
case_list (55)
    on left: 28 29, on right: 26 29
expr_list_semicolon (56)
    on left: 46 47, on right: 25 47
expr_list_comma (57)
    on left: 48 49, on right: 17 19 21 49


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


state 11

    9 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . ':' TYPEID
   12        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 15
    ':'  shift, and go to state 16


state 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    7 feature_list: feature .

    $default  reduce using rule 7 (feature_list)


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 19
    feature       go to state 13


state 15

    9 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 20
    ')'       shift, and go to state 21

    formal_list  go to state 22
    formal       go to state 23


state 16

   11 feature: OBJECTID ':' . TYPEID
   12        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 24


state 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


state 18

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


state 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 26

    feature  go to state 18


state 20

   15 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 27


state 21

    9 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 28


state 22

   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   14 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 29
    ','  shift, and go to state 30


state 23

   13 formal_list: formal .

    $default  reduce using rule 13 (formal_list)


state 24

   11 feature: OBJECTID ':' TYPEID .
   12        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 11 (feature)


state 25

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 26

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 32


state 27

   15 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 33


state 28

    9 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 34


state 29

   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 35


state 30

   14 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 20

    formal  go to state 36


state 31

   12 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 50


state 32

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 33

   15 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 15 (formal)


state 34

    9 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 51


state 35

   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 52


state 36

   14 formal_list: formal_list ',' formal .

    $default  reduce using rule 14 (formal_list)


state 37

   23 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 53


state 38

   24 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 54


state 39

   26 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 55


state 40

   30 expr: NEW . TYPEID

    TYPEID  shift, and go to state 56


state 41

   31 expr: ISVOID . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 57


state 42

   44 expr: STR_CONST .

    $default  reduce using rule 44 (expr)


state 43

   43 expr: INT_CONST .

    $default  reduce using rule 43 (expr)


state 44

   45 expr: BOOL_CONST .

    $default  reduce using rule 45 (expr)


state 45

   16 expr: OBJECTID . ASSIGN expr
   21     | OBJECTID . '(' expr_list_comma ')'
   22     | OBJECTID . '(' ')'
   42     | OBJECTID .

    ASSIGN  shift, and go to state 58
    '('     shift, and go to state 59

    $default  reduce using rule 42 (expr)


state 46

   40 expr: NOT . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 60


state 47

   36 expr: '~' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 61


state 48

   25 expr: '{' . expr_list_semicolon '}'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr                 go to state 62
    expr_list_semicolon  go to state 63


state 49

   41 expr: '(' . expr ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 64


state 50

   12 feature: OBJECTID ':' TYPEID ASSIGN expr .
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 12 (feature)


state 51

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 74


state 52

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 75


state 53

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr . THEN expr ELSE expr FI
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    THEN  shift, and go to state 76
    LE    shift, and go to state 65
    '<'   shift, and go to state 66
    '='   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '@'   shift, and go to state 72
    '.'   shift, and go to state 73


state 54

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   24     | WHILE expr . LOOP expr POOL
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LOOP  shift, and go to state 77
    LE    shift, and go to state 65
    '<'   shift, and go to state 66
    '='   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '@'   shift, and go to state 72
    '.'   shift, and go to state 73


state 55

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   26     | CASE expr . OF case_list ESAC
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    OF   shift, and go to state 78
    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73


state 56

   30 expr: NEW TYPEID .

    $default  reduce using rule 30 (expr)


state 57

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   31     | ISVOID expr .
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 31 (expr)


state 58

   16 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 79


state 59

   21 expr: OBJECTID '(' . expr_list_comma ')'
   22     | OBJECTID '(' . ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    ')'         shift, and go to state 80

    expr             go to state 81
    expr_list_comma  go to state 82


state 60

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   40     | NOT expr .

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 40 (expr)


state 61

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | '~' expr .
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 36 (expr)


state 62

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   46 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73
    ';'  shift, and go to state 83


state 63

   25 expr: '{' expr_list_semicolon . '}'
   47 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '}'         shift, and go to state 84
    '('         shift, and go to state 49

    expr  go to state 85


state 64

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   41     | '(' expr . ')'

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73
    ')'  shift, and go to state 86


state 65

   38 expr: expr LE . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 87


state 66

   37 expr: expr '<' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 88


state 67

   39 expr: expr '=' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 89


state 68

   32 expr: expr '+' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 90


state 69

   33 expr: expr '-' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 91


state 70

   34 expr: expr '*' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 92


state 71

   35 expr: expr '/' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 93


state 72

   17 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 94


state 73

   19 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   20     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 95


state 74

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73
    '}'  shift, and go to state 96


state 75

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 97


state 76

   23 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 98


state 77

   24 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 99


state 78

   26 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 100

    case       go to state 101
    case_list  go to state 102


state 79

   16 expr: OBJECTID ASSIGN expr .
   17     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 16 (expr)


state 80

   22 expr: OBJECTID '(' ')' .

    $default  reduce using rule 22 (expr)


state 81

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   48 expr_list_comma: expr .

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 48 (expr_list_comma)


state 82

   21 expr: OBJECTID '(' expr_list_comma . ')'
   49 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 103
    ','  shift, and go to state 104


state 83

   46 expr_list_semicolon: expr ';' .

    $default  reduce using rule 46 (expr_list_semicolon)


state 84

   25 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 25 (expr)


state 85

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   47 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73
    ';'  shift, and go to state 105


state 86

   41 expr: '(' expr ')' .

    $default  reduce using rule 41 (expr)


state 87

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . '=' expr

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 38 (expr)


state 88

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   37     | expr '<' expr .
   38     | expr . LE expr
   39     | expr . '=' expr

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 37 (expr)


state 89

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   39     | expr '=' expr .

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 39 (expr)


state 90

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   32     | expr '+' expr .
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 32 (expr)


state 91

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   33     | expr '-' expr .
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 33 (expr)


state 92

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   34     | expr '*' expr .
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 34 (expr)


state 93

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   35     | expr '/' expr .
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 35 (expr)


state 94

   17 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 106


state 95

   19 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   20     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 107


state 96

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)


state 97

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73
    '}'  shift, and go to state 108


state 98

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr THEN expr . ELSE expr FI
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    ELSE  shift, and go to state 109
    LE    shift, and go to state 65
    '<'   shift, and go to state 66
    '='   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '@'   shift, and go to state 72
    '.'   shift, and go to state 73


state 99

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   24     | WHILE expr LOOP expr . POOL
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    POOL  shift, and go to state 110
    LE    shift, and go to state 65
    '<'   shift, and go to state 66
    '='   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '@'   shift, and go to state 72
    '.'   shift, and go to state 73


state 100

   27 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 111


state 101

   28 case_list: case .

    $default  reduce using rule 28 (case_list)


state 102

   26 expr: CASE expr OF case_list . ESAC
   29 case_list: case_list . case

    ESAC      shift, and go to state 112
    OBJECTID  shift, and go to state 100

    case  go to state 113


state 103

   21 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 21 (expr)


state 104

   49 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 114


state 105

   47 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 47 (expr_list_semicolon)


state 106

   17 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 115


state 107

   19 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   20     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    ')'         shift, and go to state 116

    expr             go to state 81
    expr_list_comma  go to state 117


state 108

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 109

   23 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 118


state 110

   24 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 24 (expr)


state 111

   27 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 119


state 112

   26 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 26 (expr)


state 113

   29 case_list: case_list case .

    $default  reduce using rule 29 (case_list)


state 114

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr
   49 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73

    $default  reduce using rule 49 (expr_list_comma)


state 115

   17 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 120


state 116

   20 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 20 (expr)


state 117

   19 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   49 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 121
    ','  shift, and go to state 104


state 118

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr THEN expr ELSE expr . FI
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    FI   shift, and go to state 122
    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73


state 119

   27 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 123


state 120

   17 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    ')'         shift, and go to state 124

    expr             go to state 81
    expr_list_comma  go to state 125


state 121

   19 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 19 (expr)


state 122

   23 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 23 (expr)


state 123

   27 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expr  go to state 126


state 124

   18 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 18 (expr)


state 125

   17 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   49 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 127
    ','  shift, and go to state 104


state 126

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   27 case: OBJECTID ':' TYPEID DARROW expr . ';'
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   37     | expr . '<' expr
   38     | expr . LE expr
   39     | expr . '=' expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '@'  shift, and go to state 72
    '.'  shift, and go to state 73
    ';'  shift, and go to state 128


state 127

   17 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 17 (expr)


state 128

   27 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 27 (case)
