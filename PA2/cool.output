Terminals unused in grammar

   ERROR


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 61 conflicts: 9 shift/reduce
State 64 conflicts: 9 shift/reduce
State 68 conflicts: 9 shift/reduce
State 86 conflicts: 9 shift/reduce
State 94 conflicts: 9 shift/reduce
State 97 conflicts: 9 shift/reduce
State 98 conflicts: 9 shift/reduce
State 99 conflicts: 9 shift/reduce
State 100 conflicts: 9 shift/reduce
State 101 conflicts: 9 shift/reduce
State 102 conflicts: 9 shift/reduce
State 107 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature
    8             | feature_list feature

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID ':' TYPEID
   12        | OBJECTID ':' TYPEID ASSIGN expr

   13 formal_list: formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 expr: OBJECTID ASSIGN expr
   17     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr '.' OBJECTID '(' expr_list_comma ')'
   20     | expr '.' OBJECTID '(' ')'
   21     | OBJECTID '(' expr_list_comma ')'
   22     | OBJECTID '(' ')'
   23     | IF expr THEN expr ELSE expr FI
   24     | WHILE expr LOOP expr POOL
   25     | '{' expr_list_semicolon '}'
   26     | LET let_list IN expr
   27     | CASE expr OF case_list ESAC
   28     | NEW TYPEID
   29     | ISVOID expr
   30     | expr '+' expr
   31     | expr '-' expr
   32     | expr '*' expr
   33     | expr '/' expr
   34     | '~' expr
   35     | expr '<' expr
   36     | expr LE expr
   37     | expr '=' expr
   38     | NOT expr
   39     | '(' expr ')'
   40     | OBJECTID
   41     | INT_CONST
   42     | STR_CONST
   43     | BOOL_CONST

   44 let_attr: OBJECTID ':' TYPEID
   45         | OBJECTID ':' TYPEID ASSIGN expr

   46 let_list: let_attr
   47         | let_list ',' let_attr

   48 case_list: case
   49          | case_list case

   50 case: OBJECTID ':' TYPEID DARROW expr ';'

   51 expr_list_semicolon: expr ';'
   52                    | expr_list_semicolon expr ';'

   53 expr_list_comma: expr
   54                | expr_list_comma ',' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 17 18 19 20 21 22 39
')' (41) 9 10 17 18 19 20 21 22 39
'*' (42) 32
'+' (43) 30
',' (44) 14 47 54
'-' (45) 31
'.' (46) 17 18 19 20
'/' (47) 33
':' (58) 9 10 11 12 15 44 45 50
';' (59) 4 5 50 51 52
'<' (60) 35
'=' (61) 37
'@' (64) 17 18
'{' (123) 4 5 9 10 25
'}' (125) 4 5 9 10 25
'~' (126) 34
error (256)
CLASS (258) 4 5
ELSE (259) 23
FI (260) 23
IF (261) 23
IN (262) 26
INHERITS (263) 5
LET (264) 26
LOOP (265) 24
POOL (266) 24
THEN (267) 23
WHILE (268) 24
CASE (269) 27
ESAC (270) 27
OF (271) 27
DARROW (272) 50
NEW (273) 28
ISVOID (274) 29
STR_CONST (275) 42
INT_CONST (276) 41
BOOL_CONST (277) 43
TYPEID (278) 4 5 9 10 11 12 15 17 18 28 44 45 50
OBJECTID (279) 9 10 11 12 15 16 17 18 19 20 21 22 40 44 45 50
ASSIGN (280) 12 16 45
NOT (281) 38
LE (282) 36
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
feature_list (49)
    on left: 6 7 8, on right: 4 5 8
feature (50)
    on left: 9 10 11 12, on right: 7 8
formal_list (51)
    on left: 13 14, on right: 10 14
formal (52)
    on left: 15, on right: 13 14
expr (53)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37 38 39 40 41 42 43, on right: 9 10 12 16 17 18 19 20
    23 24 26 27 29 30 31 32 33 34 35 36 37 38 39 45 50 51 52 53 54
let_attr (54)
    on left: 44 45, on right: 46 47
let_list (55)
    on left: 46 47, on right: 26 47
case_list (56)
    on left: 48 49, on right: 27 49
case (57)
    on left: 50, on right: 48 49
expr_list_semicolon (58)
    on left: 51 52, on right: 25 52
expr_list_comma (59)
    on left: 53 54, on right: 17 19 21 54


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


state 11

    9 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . ':' TYPEID
   12        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 15
    ':'  shift, and go to state 16


state 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    7 feature_list: feature .

    $default  reduce using rule 7 (feature_list)


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 19
    feature       go to state 13


state 15

    9 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 20
    ')'       shift, and go to state 21

    formal_list  go to state 22
    formal       go to state 23


state 16

   11 feature: OBJECTID ':' . TYPEID
   12        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 24


state 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


state 18

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


state 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 26

    feature  go to state 18


state 20

   15 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 27


state 21

    9 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 28


state 22

   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   14 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 29
    ','  shift, and go to state 30


state 23

   13 formal_list: formal .

    $default  reduce using rule 13 (formal_list)


state 24

   11 feature: OBJECTID ':' TYPEID .
   12        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 11 (feature)


state 25

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 26

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 32


state 27

   15 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 33


state 28

    9 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 34


state 29

   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 35


state 30

   14 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 20

    formal  go to state 36


state 31

   12 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 51


state 32

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 33

   15 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 15 (formal)


state 34

    9 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 52


state 35

   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 53


state 36

   14 formal_list: formal_list ',' formal .

    $default  reduce using rule 14 (formal_list)


state 37

   23 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 54


state 38

   26 expr: LET . let_list IN expr

    OBJECTID  shift, and go to state 55

    let_attr  go to state 56
    let_list  go to state 57


state 39

   24 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 58


state 40

   27 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 59


state 41

   28 expr: NEW . TYPEID

    TYPEID  shift, and go to state 60


state 42

   29 expr: ISVOID . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 61


state 43

   42 expr: STR_CONST .

    $default  reduce using rule 42 (expr)


state 44

   41 expr: INT_CONST .

    $default  reduce using rule 41 (expr)


state 45

   43 expr: BOOL_CONST .

    $default  reduce using rule 43 (expr)


state 46

   16 expr: OBJECTID . ASSIGN expr
   21     | OBJECTID . '(' expr_list_comma ')'
   22     | OBJECTID . '(' ')'
   40     | OBJECTID .

    ASSIGN  shift, and go to state 62
    '('     shift, and go to state 63

    $default  reduce using rule 40 (expr)


state 47

   38 expr: NOT . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 64


state 48

   25 expr: '{' . expr_list_semicolon '}'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr                 go to state 65
    expr_list_semicolon  go to state 66


state 49

   39 expr: '(' . expr ')'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 67


state 50

   34 expr: '~' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 68


state 51

   12 feature: OBJECTID ':' TYPEID ASSIGN expr .
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    $default  reduce using rule 12 (feature)


state 52

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 78


state 53

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 79


state 54

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr . THEN expr ELSE expr FI
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    THEN  shift, and go to state 80
    LE    shift, and go to state 69
    '@'   shift, and go to state 70
    '.'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77


state 55

   44 let_attr: OBJECTID . ':' TYPEID
   45         | OBJECTID . ':' TYPEID ASSIGN expr

    ':'  shift, and go to state 81


state 56

   46 let_list: let_attr .

    $default  reduce using rule 46 (let_list)


state 57

   26 expr: LET let_list . IN expr
   47 let_list: let_list . ',' let_attr

    IN   shift, and go to state 82
    ','  shift, and go to state 83


state 58

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   24     | WHILE expr . LOOP expr POOL
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LOOP  shift, and go to state 84
    LE    shift, and go to state 69
    '@'   shift, and go to state 70
    '.'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77


state 59

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   27     | CASE expr . OF case_list ESAC
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    OF   shift, and go to state 85
    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 60

   28 expr: NEW TYPEID .

    $default  reduce using rule 28 (expr)


state 61

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   29     | ISVOID expr .
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 29 (expr)]
    '@'       [reduce using rule 29 (expr)]
    '.'       [reduce using rule 29 (expr)]
    '+'       [reduce using rule 29 (expr)]
    '-'       [reduce using rule 29 (expr)]
    '*'       [reduce using rule 29 (expr)]
    '/'       [reduce using rule 29 (expr)]
    '<'       [reduce using rule 29 (expr)]
    '='       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


state 62

   16 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 86


state 63

   21 expr: OBJECTID '(' . expr_list_comma ')'
   22     | OBJECTID '(' . ')'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    ')'         shift, and go to state 87
    '~'         shift, and go to state 50

    expr             go to state 88
    expr_list_comma  go to state 89


state 64

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   38     | NOT expr .

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 38 (expr)]
    '@'       [reduce using rule 38 (expr)]
    '.'       [reduce using rule 38 (expr)]
    '+'       [reduce using rule 38 (expr)]
    '-'       [reduce using rule 38 (expr)]
    '*'       [reduce using rule 38 (expr)]
    '/'       [reduce using rule 38 (expr)]
    '<'       [reduce using rule 38 (expr)]
    '='       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


state 65

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   51 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 69
    ';'  shift, and go to state 90
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 66

   25 expr: '{' expr_list_semicolon . '}'
   52 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '}'         shift, and go to state 91
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 92


state 67

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   39     | '(' expr . ')'

    LE   shift, and go to state 69
    ')'  shift, and go to state 93
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 68

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   34     | '~' expr .
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 34 (expr)]
    '@'       [reduce using rule 34 (expr)]
    '.'       [reduce using rule 34 (expr)]
    '+'       [reduce using rule 34 (expr)]
    '-'       [reduce using rule 34 (expr)]
    '*'       [reduce using rule 34 (expr)]
    '/'       [reduce using rule 34 (expr)]
    '<'       [reduce using rule 34 (expr)]
    '='       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 69

   36 expr: expr LE . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 94


state 70

   17 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 95


state 71

   19 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   20     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 96


state 72

   30 expr: expr '+' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 97


state 73

   31 expr: expr '-' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 98


state 74

   32 expr: expr '*' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 99


state 75

   33 expr: expr '/' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 100


state 76

   35 expr: expr '<' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 101


state 77

   37 expr: expr '=' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 102


state 78

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '}'  shift, and go to state 103
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 79

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 104


state 80

   23 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 105


state 81

   44 let_attr: OBJECTID ':' . TYPEID
   45         | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 106


state 82

   26 expr: LET let_list IN . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 107


state 83

   47 let_list: let_list ',' . let_attr

    OBJECTID  shift, and go to state 55

    let_attr  go to state 108


state 84

   24 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 109


state 85

   27 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 110

    case_list  go to state 111
    case       go to state 112


state 86

   16 expr: OBJECTID ASSIGN expr .
   17     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 16 (expr)]
    '@'       [reduce using rule 16 (expr)]
    '.'       [reduce using rule 16 (expr)]
    '+'       [reduce using rule 16 (expr)]
    '-'       [reduce using rule 16 (expr)]
    '*'       [reduce using rule 16 (expr)]
    '/'       [reduce using rule 16 (expr)]
    '<'       [reduce using rule 16 (expr)]
    '='       [reduce using rule 16 (expr)]
    $default  reduce using rule 16 (expr)


state 87

   22 expr: OBJECTID '(' ')' .

    $default  reduce using rule 22 (expr)


state 88

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   53 expr_list_comma: expr .

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    $default  reduce using rule 53 (expr_list_comma)


state 89

   21 expr: OBJECTID '(' expr_list_comma . ')'
   54 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 113
    ','  shift, and go to state 114


state 90

   51 expr_list_semicolon: expr ';' .

    $default  reduce using rule 51 (expr_list_semicolon)


state 91

   25 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 25 (expr)


state 92

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   52 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 69
    ';'  shift, and go to state 115
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 93

   39 expr: '(' expr ')' .

    $default  reduce using rule 39 (expr)


state 94

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   36     | expr LE expr .
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 36 (expr)]
    '@'       [reduce using rule 36 (expr)]
    '.'       [reduce using rule 36 (expr)]
    '+'       [reduce using rule 36 (expr)]
    '-'       [reduce using rule 36 (expr)]
    '*'       [reduce using rule 36 (expr)]
    '/'       [reduce using rule 36 (expr)]
    '<'       [reduce using rule 36 (expr)]
    '='       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


state 95

   17 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 116


state 96

   19 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   20     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 117


state 97

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   30     | expr '+' expr .
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 30 (expr)]
    '@'       [reduce using rule 30 (expr)]
    '.'       [reduce using rule 30 (expr)]
    '+'       [reduce using rule 30 (expr)]
    '-'       [reduce using rule 30 (expr)]
    '*'       [reduce using rule 30 (expr)]
    '/'       [reduce using rule 30 (expr)]
    '<'       [reduce using rule 30 (expr)]
    '='       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


state 98

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   31     | expr '-' expr .
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 31 (expr)]
    '@'       [reduce using rule 31 (expr)]
    '.'       [reduce using rule 31 (expr)]
    '+'       [reduce using rule 31 (expr)]
    '-'       [reduce using rule 31 (expr)]
    '*'       [reduce using rule 31 (expr)]
    '/'       [reduce using rule 31 (expr)]
    '<'       [reduce using rule 31 (expr)]
    '='       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


state 99

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   32     | expr '*' expr .
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 32 (expr)]
    '@'       [reduce using rule 32 (expr)]
    '.'       [reduce using rule 32 (expr)]
    '+'       [reduce using rule 32 (expr)]
    '-'       [reduce using rule 32 (expr)]
    '*'       [reduce using rule 32 (expr)]
    '/'       [reduce using rule 32 (expr)]
    '<'       [reduce using rule 32 (expr)]
    '='       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


state 100

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   33     | expr '/' expr .
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 33 (expr)]
    '@'       [reduce using rule 33 (expr)]
    '.'       [reduce using rule 33 (expr)]
    '+'       [reduce using rule 33 (expr)]
    '-'       [reduce using rule 33 (expr)]
    '*'       [reduce using rule 33 (expr)]
    '/'       [reduce using rule 33 (expr)]
    '<'       [reduce using rule 33 (expr)]
    '='       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


state 101

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   35     | expr '<' expr .
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 35 (expr)]
    '@'       [reduce using rule 35 (expr)]
    '.'       [reduce using rule 35 (expr)]
    '+'       [reduce using rule 35 (expr)]
    '-'       [reduce using rule 35 (expr)]
    '*'       [reduce using rule 35 (expr)]
    '/'       [reduce using rule 35 (expr)]
    '<'       [reduce using rule 35 (expr)]
    '='       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


state 102

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   37     | expr '=' expr .

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 37 (expr)]
    '@'       [reduce using rule 37 (expr)]
    '.'       [reduce using rule 37 (expr)]
    '+'       [reduce using rule 37 (expr)]
    '-'       [reduce using rule 37 (expr)]
    '*'       [reduce using rule 37 (expr)]
    '/'       [reduce using rule 37 (expr)]
    '<'       [reduce using rule 37 (expr)]
    '='       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


state 103

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)


state 104

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '}'  shift, and go to state 118
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 105

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr THEN expr . ELSE expr FI
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    ELSE  shift, and go to state 119
    LE    shift, and go to state 69
    '@'   shift, and go to state 70
    '.'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77


state 106

   44 let_attr: OBJECTID ':' TYPEID .
   45         | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 120

    $default  reduce using rule 44 (let_attr)


state 107

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   26     | LET let_list IN expr .
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    LE        [reduce using rule 26 (expr)]
    '@'       [reduce using rule 26 (expr)]
    '.'       [reduce using rule 26 (expr)]
    '+'       [reduce using rule 26 (expr)]
    '-'       [reduce using rule 26 (expr)]
    '*'       [reduce using rule 26 (expr)]
    '/'       [reduce using rule 26 (expr)]
    '<'       [reduce using rule 26 (expr)]
    '='       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


state 108

   47 let_list: let_list ',' let_attr .

    $default  reduce using rule 47 (let_list)


state 109

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   24     | WHILE expr LOOP expr . POOL
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    POOL  shift, and go to state 121
    LE    shift, and go to state 69
    '@'   shift, and go to state 70
    '.'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '<'   shift, and go to state 76
    '='   shift, and go to state 77


state 110

   50 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 122


state 111

   27 expr: CASE expr OF case_list . ESAC
   49 case_list: case_list . case

    ESAC      shift, and go to state 123
    OBJECTID  shift, and go to state 110

    case  go to state 124


state 112

   48 case_list: case .

    $default  reduce using rule 48 (case_list)


state 113

   21 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 21 (expr)


state 114

   54 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 125


state 115

   52 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 52 (expr_list_semicolon)


state 116

   17 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 126


state 117

   19 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   20     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    ')'         shift, and go to state 127
    '~'         shift, and go to state 50

    expr             go to state 88
    expr_list_comma  go to state 128


state 118

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 119

   23 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 129


state 120

   45 let_attr: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 130


state 121

   24 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 24 (expr)


state 122

   50 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 131


state 123

   27 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 27 (expr)


state 124

   49 case_list: case_list case .

    $default  reduce using rule 49 (case_list)


state 125

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   54 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    $default  reduce using rule 54 (expr_list_comma)


state 126

   17 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 132


state 127

   20 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 20 (expr)


state 128

   19 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   54 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 133
    ','  shift, and go to state 114


state 129

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   23     | IF expr THEN expr ELSE expr . FI
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr

    FI   shift, and go to state 134
    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 130

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   45 let_attr: OBJECTID ':' TYPEID ASSIGN expr .

    LE   shift, and go to state 69
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77

    $default  reduce using rule 45 (let_attr)


state 131

   50 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 135


state 132

   17 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   18     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    ')'         shift, and go to state 136
    '~'         shift, and go to state 50

    expr             go to state 88
    expr_list_comma  go to state 137


state 133

   19 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 19 (expr)


state 134

   23 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 23 (expr)


state 135

   50 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 37
    LET         shift, and go to state 38
    WHILE       shift, and go to state 39
    CASE        shift, and go to state 40
    NEW         shift, and go to state 41
    ISVOID      shift, and go to state 42
    STR_CONST   shift, and go to state 43
    INT_CONST   shift, and go to state 44
    BOOL_CONST  shift, and go to state 45
    OBJECTID    shift, and go to state 46
    NOT         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49
    '~'         shift, and go to state 50

    expr  go to state 138


state 136

   18 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 18 (expr)


state 137

   17 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   54 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 139
    ','  shift, and go to state 114


state 138

   17 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   18     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   19     | expr . '.' OBJECTID '(' expr_list_comma ')'
   20     | expr . '.' OBJECTID '(' ')'
   30     | expr . '+' expr
   31     | expr . '-' expr
   32     | expr . '*' expr
   33     | expr . '/' expr
   35     | expr . '<' expr
   36     | expr . LE expr
   37     | expr . '=' expr
   50 case: OBJECTID ':' TYPEID DARROW expr . ';'

    LE   shift, and go to state 69
    ';'  shift, and go to state 140
    '@'  shift, and go to state 70
    '.'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '<'  shift, and go to state 76
    '='  shift, and go to state 77


state 139

   17 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 17 (expr)


state 140

   50 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 50 (case)
