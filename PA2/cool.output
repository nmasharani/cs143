Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: class_list

<<<<<<< HEAD
    2 class_list: class ';'
    3           | class_list class ';'
    4           | error ';'
    5           | class_list error ';'

    6 class: CLASS TYPEID '{' feature_list '}'
    7      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'
    8      | CLASS TYPEID '{' '}'
    9      | CLASS TYPEID INHERITS TYPEID '{' '}'

   10 feature_list: feature ';'
   11             | feature_list feature ';'

   12 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   13        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   14        | OBJECTID ':' TYPEID
   15        | OBJECTID ':' TYPEID ASSIGN expr

   16 feature_list: error ';'
   17             | feature error ';'
   18             | feature_list error ';'

   19 formal_list: formal
   20            | formal_list ',' formal

   21 formal: OBJECTID ':' TYPEID

   22 expr: OBJECTID ASSIGN expr
   23     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr '.' OBJECTID '(' expr_list_comma ')'
   26     | expr '.' OBJECTID '(' ')'
   27     | OBJECTID '(' expr_list_comma ')'
   28     | OBJECTID '(' ')'
   29     | IF expr THEN expr ELSE expr FI
   30     | WHILE expr LOOP expr POOL
   31     | '{' expr_list_semicolon '}'
   32     | '{' error '}'
   33     | LET let_list

   34 let_list: OBJECTID ':' TYPEID IN expr
   35         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   36         | OBJECTID ':' TYPEID ',' let_list
   37         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list
   38         | OBJECTID ':' TYPEID ASSIGN error ',' let_list
   39         | OBJECTID ':' TYPEID ASSIGN error IN expr

   40 expr: CASE expr OF case_list ESAC

   41 case: OBJECTID ':' TYPEID DARROW expr ';'

   42 case_list: case
   43          | case_list case

   44 expr: NEW TYPEID
   45     | ISVOID expr
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | '~' expr
   51     | expr '<' expr
   52     | expr LE expr
   53     | expr '=' expr
   54     | NOT expr
   55     | '(' expr ')'
   56     | OBJECTID
   57     | INT_CONST
   58     | STR_CONST
   59     | BOOL_CONST

   60 expr_list_semicolon: expr ';'
   61                    | expr_list_semicolon expr ';'
   62                    | error ';'
   63                    | expr_list_semicolon error ';'

   64 expr_list_comma: expr
   65                | expr_list_comma ',' expr
   66                | expr_list_comma ',' error
=======
    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS error '{' feature_list '}' ';'

    7 feature_list: /* empty */
    8             | feature_list feature ';'

    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID ':' TYPEID
   12        | OBJECTID ':' TYPEID ASSIGN expr

   13 feature_list: feature_list error ';'

   14 formal_list: formal
   15            | formal_list ',' formal

   16 formal: OBJECTID ':' TYPEID

   17 expr: OBJECTID ASSIGN expr
   18     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr '.' OBJECTID '(' expr_list_comma ')'
   21     | expr '.' OBJECTID '(' ')'
   22     | OBJECTID '(' expr_list_comma ')'
   23     | OBJECTID '(' ')'
   24     | IF expr THEN expr ELSE expr FI
   25     | WHILE expr LOOP expr POOL
   26     | '{' expr_list_semicolon '}'
   27     | '{' error '}'
   28     | LET let_list

   29 let_list: OBJECTID ':' TYPEID IN expr
   30         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   31         | OBJECTID ':' TYPEID ',' let_list
   32         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list
   33         | error ',' let_list

   34 expr: CASE expr OF case_list ESAC

   35 case: OBJECTID ':' TYPEID DARROW expr ';'

   36 case_list: case
   37          | case_list case

   38 expr: NEW TYPEID
   39     | ISVOID expr
   40     | expr '+' expr
   41     | expr '-' expr
   42     | expr '*' expr
   43     | expr '/' expr
   44     | '~' expr
   45     | expr '<' expr
   46     | expr LE expr
   47     | expr '=' expr
   48     | NOT expr
   49     | '(' expr ')'
   50     | OBJECTID
   51     | INT_CONST
   52     | STR_CONST
   53     | BOOL_CONST

   54 expr_list_semicolon: expr ';'
   55                    | expr_list_semicolon expr ';'

   56 expr_list_comma: expr
   57                | expr_list_comma ',' expr
>>>>>>> nm3


Terminals, with rules where they appear

$end (0) 0
<<<<<<< HEAD
'(' (40) 12 13 23 24 25 26 27 28 55
')' (41) 12 13 23 24 25 26 27 28 55
'*' (42) 48
'+' (43) 46
',' (44) 20 36 37 38 65 66
'-' (45) 47
'.' (46) 23 24 25 26
'/' (47) 49
':' (58) 12 13 14 15 21 34 35 36 37 38 39 41
';' (59) 2 3 4 5 10 11 16 17 18 41 60 61 62 63
'<' (60) 51
'=' (61) 53
'@' (64) 23 24
'{' (123) 6 7 8 9 12 13 31 32
'}' (125) 6 7 8 9 12 13 31 32
'~' (126) 50
error (256) 4 5 16 17 18 32 38 39 62 63 66
CLASS (258) 6 7 8 9
ELSE (259) 29
FI (260) 29
IF (261) 29
IN (262) 34 35 39
INHERITS (263) 7 9
LET (264) 33
LOOP (265) 30
POOL (266) 30
THEN (267) 29
WHILE (268) 30
CASE (269) 40
ESAC (270) 40
OF (271) 40
DARROW (272) 41
NEW (273) 44
ISVOID (274) 45
STR_CONST (275) 58
INT_CONST (276) 57
BOOL_CONST (277) 59
TYPEID (278) 6 7 8 9 12 13 14 15 21 23 24 34 35 36 37 38 39 41 44
OBJECTID (279) 12 13 14 15 21 22 23 24 25 26 27 28 34 35 36 37 38 39
    41 56
ASSIGN (280) 15 22 35 37 38 39
NOT (281) 54
LE (282) 52
=======
'(' (40) 9 10 18 19 20 21 22 23 49
')' (41) 9 10 18 19 20 21 22 23 49
'*' (42) 42
'+' (43) 40
',' (44) 15 31 32 33 57
'-' (45) 41
'.' (46) 18 19 20 21
'/' (47) 43
':' (58) 9 10 11 12 16 29 30 31 32 35
';' (59) 4 5 6 8 13 35 54 55
'<' (60) 45
'=' (61) 47
'@' (64) 18 19
'{' (123) 4 5 6 9 10 26 27
'}' (125) 4 5 6 9 10 26 27
'~' (126) 44
error (256) 6 13 27 33
CLASS (258) 4 5 6
ELSE (259) 24
FI (260) 24
IF (261) 24
IN (262) 29 30
INHERITS (263) 5
LET (264) 28
LOOP (265) 25
POOL (266) 25
THEN (267) 24
WHILE (268) 25
CASE (269) 34
ESAC (270) 34
OF (271) 34
DARROW (272) 35
NEW (273) 38
ISVOID (274) 39
STR_CONST (275) 52
INT_CONST (276) 51
BOOL_CONST (277) 53
TYPEID (278) 4 5 9 10 11 12 16 18 19 29 30 31 32 35 38
OBJECTID (279) 9 10 11 12 16 17 18 19 20 21 22 23 29 30 31 32 35 50
ASSIGN (280) 12 17 30 32
NOT (281) 48
LE (282) 46
>>>>>>> nm3
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5 6, on right: 2 3
feature_list (50)
<<<<<<< HEAD
    on left: 10 11 16 17 18, on right: 6 7 11 18
feature (51)
    on left: 12 13 14 15, on right: 10 11 17
formal_list (52)
    on left: 19 20, on right: 13 20
formal (53)
    on left: 21, on right: 19 20
expr (54)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 40 44 45 46 47 48
    49 50 51 52 53 54 55 56 57 58 59, on right: 12 13 15 22 23 24 25
    26 29 30 34 35 37 39 40 41 45 46 47 48 49 50 51 52 53 54 55 60
    61 64 65
let_list (55)
    on left: 34 35 36 37 38 39, on right: 33 36 37 38
case (56)
    on left: 41, on right: 42 43
case_list (57)
    on left: 42 43, on right: 40 43
expr_list_semicolon (58)
    on left: 60 61 62 63, on right: 31 61 63
expr_list_comma (59)
    on left: 64 65 66, on right: 23 25 27 65 66
=======
    on left: 7 8 13, on right: 4 5 6 8 13
feature (51)
    on left: 9 10 11 12, on right: 8
formal_list (52)
    on left: 14 15, on right: 10 15
formal (53)
    on left: 16, on right: 14 15
expr (54)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 34 38 39 40 41 42
    43 44 45 46 47 48 49 50 51 52 53, on right: 9 10 12 17 18 19 20
    21 24 25 29 30 32 34 35 39 40 41 42 43 44 45 46 47 48 49 54 55
    56 57
let_list (55)
    on left: 29 30 31 32 33, on right: 28 31 32 33
case (56)
    on left: 35, on right: 36 37
case_list (57)
    on left: 36 37, on right: 34 37
expr_list_semicolon (58)
    on left: 54 55, on right: 26 55
expr_list_comma (59)
    on left: 56 57, on right: 18 20 22 57
>>>>>>> nm3


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS . error '{' feature_list '}' ';'

    error   shift, and go to state 5
    TYPEID  shift, and go to state 6


state 2

    0 $accept: program . $end

    $end  shift, and go to state 7


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 8


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    6 class: CLASS error . '{' feature_list '}' ';'

    '{'  shift, and go to state 9


state 6

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


state 7

    0 $accept: program $end .

    $default  accept


state 8

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 9

    6 class: CLASS error '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 12


state 10

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 13


state 11

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 14


state 12

    6 class: CLASS error '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'
   13             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 19


state 14

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'
   13             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 20

    feature  go to state 18


state 15

   13 feature_list: feature_list error . ';'

    ';'  shift, and go to state 21


state 16

    9 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . ':' TYPEID
   12        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 22
    ':'  shift, and go to state 23


state 17

    6 class: CLASS error '{' feature_list '}' . ';'

    ';'  shift, and go to state 24


state 18

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 25


state 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 26


state 20

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 27


state 21

<<<<<<< HEAD
   10 feature_list: feature . ';'
   17             | feature . error ';'

    error  shift, and go to state 29
    ';'    shift, and go to state 30
=======
   13 feature_list: feature_list error ';' .

    $default  reduce using rule 13 (feature_list)
>>>>>>> nm3


state 22

    9 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

<<<<<<< HEAD
    error     shift, and go to state 17
    OBJECTID  shift, and go to state 18
    '}'       shift, and go to state 31

    feature_list  go to state 32
    feature       go to state 21
=======
    OBJECTID  shift, and go to state 28
    ')'       shift, and go to state 29

    formal_list  go to state 30
    formal       go to state 31
>>>>>>> nm3


state 23

   11 feature: OBJECTID ':' . TYPEID
   12        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 32


state 24

<<<<<<< HEAD
   12 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   13        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 33
    ')'       shift, and go to state 34

    formal_list  go to state 35
    formal       go to state 36
=======
    6 class: CLASS error '{' feature_list '}' ';' .

    $default  reduce using rule 6 (class)
>>>>>>> nm3


state 25

    8 feature_list: feature_list feature ';' .

<<<<<<< HEAD
    TYPEID  shift, and go to state 37
=======
    $default  reduce using rule 8 (feature_list)
>>>>>>> nm3


state 26

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'
   13             | feature_list . error ';'

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 33

<<<<<<< HEAD
    ';'  shift, and go to state 38
=======
    feature  go to state 18
>>>>>>> nm3


state 27

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 28

   16 formal: OBJECTID . ':' TYPEID

<<<<<<< HEAD
    ';'  shift, and go to state 39
=======
    ':'  shift, and go to state 34
>>>>>>> nm3


state 29

    9 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

<<<<<<< HEAD
    ';'  shift, and go to state 40
=======
    ':'  shift, and go to state 35
>>>>>>> nm3


state 30

<<<<<<< HEAD
   10 feature_list: feature ';' .

    $default  reduce using rule 10 (feature_list)
=======
   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   15 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 36
    ','  shift, and go to state 37
>>>>>>> nm3


state 31

<<<<<<< HEAD
    9 class: CLASS TYPEID INHERITS TYPEID '{' '}' .

    $default  reduce using rule 9 (class)
=======
   14 formal_list: formal .

    $default  reduce using rule 14 (formal_list)
>>>>>>> nm3


state 32

<<<<<<< HEAD
    7 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
   11 feature_list: feature_list . feature ';'
   18             | feature_list . error ';'

    error     shift, and go to state 26
    OBJECTID  shift, and go to state 18
    '}'       shift, and go to state 41

    feature  go to state 28
=======
   11 feature: OBJECTID ':' TYPEID .
   12        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 38

    $default  reduce using rule 11 (feature)
>>>>>>> nm3


state 33

<<<<<<< HEAD
   21 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 42
=======
    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 39
>>>>>>> nm3


state 34

<<<<<<< HEAD
   12 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 43
=======
   16 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 40
>>>>>>> nm3


state 35

<<<<<<< HEAD
   13 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   20 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 44
    ','  shift, and go to state 45
=======
    9 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 41
>>>>>>> nm3


state 36

<<<<<<< HEAD
   19 formal_list: formal .

    $default  reduce using rule 19 (formal_list)
=======
   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 42
>>>>>>> nm3


state 37

<<<<<<< HEAD
   14 feature: OBJECTID ':' TYPEID .
   15        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 46

    $default  reduce using rule 14 (feature)
=======
   15 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 28

    formal  go to state 43
>>>>>>> nm3


state 38

<<<<<<< HEAD
   18 feature_list: feature_list error ';' .

    $default  reduce using rule 18 (feature_list)
=======
   12 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57
>>>>>>> nm3

    expr  go to state 58


<<<<<<< HEAD
   11 feature_list: feature_list feature ';' .

    $default  reduce using rule 11 (feature_list)
=======
state 39

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)
>>>>>>> nm3


state 40

<<<<<<< HEAD
   17 feature_list: feature error ';' .

    $default  reduce using rule 17 (feature_list)
=======
   16 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 16 (formal)
>>>>>>> nm3


state 41

<<<<<<< HEAD
    7 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 7 (class)
=======
    9 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 59
>>>>>>> nm3


state 42

<<<<<<< HEAD
   21 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 47
=======
   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 60
>>>>>>> nm3


state 43

<<<<<<< HEAD
   12 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'
=======
   15 formal_list: formal_list ',' formal .

    $default  reduce using rule 15 (formal_list)
>>>>>>> nm3

    TYPEID  shift, and go to state 48


<<<<<<< HEAD
state 44

   13 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 49
=======
   24 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 61
>>>>>>> nm3


state 45

<<<<<<< HEAD
   20 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 33

    formal  go to state 50
=======
   28 expr: LET . let_list

    error     shift, and go to state 62
    OBJECTID  shift, and go to state 63

    let_list  go to state 64
>>>>>>> nm3


state 46

<<<<<<< HEAD
   15 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

=======
   25 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

>>>>>>> nm3
    expr  go to state 65


state 47

<<<<<<< HEAD
   21 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 21 (formal)
=======
   34 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 66
>>>>>>> nm3


state 48

<<<<<<< HEAD
   12 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 66
=======
   38 expr: NEW . TYPEID

    TYPEID  shift, and go to state 67
>>>>>>> nm3


state 49

<<<<<<< HEAD
   13 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 67
=======
   39 expr: ISVOID . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 68
>>>>>>> nm3


state 50

<<<<<<< HEAD
   20 formal_list: formal_list ',' formal .

    $default  reduce using rule 20 (formal_list)
=======
   52 expr: STR_CONST .

    $default  reduce using rule 52 (expr)
>>>>>>> nm3


state 51

<<<<<<< HEAD
   29 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 68
=======
   51 expr: INT_CONST .

    $default  reduce using rule 51 (expr)
>>>>>>> nm3


state 52

<<<<<<< HEAD
   33 expr: LET . let_list

    OBJECTID  shift, and go to state 69

    let_list  go to state 70
=======
   53 expr: BOOL_CONST .

    $default  reduce using rule 53 (expr)
>>>>>>> nm3


state 53

<<<<<<< HEAD
   30 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 71
=======
   17 expr: OBJECTID . ASSIGN expr
   22     | OBJECTID . '(' expr_list_comma ')'
   23     | OBJECTID . '(' ')'
   50     | OBJECTID .

    ASSIGN  shift, and go to state 69
    '('     shift, and go to state 70

    $default  reduce using rule 50 (expr)
>>>>>>> nm3


state 54

<<<<<<< HEAD
   40 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 72
=======
   48 expr: NOT . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 71
>>>>>>> nm3


state 55

<<<<<<< HEAD
   44 expr: NEW . TYPEID

    TYPEID  shift, and go to state 73
=======
   44 expr: '~' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 72
>>>>>>> nm3


state 56

<<<<<<< HEAD
   45 expr: ISVOID . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 74
=======
   26 expr: '{' . expr_list_semicolon '}'
   27     | '{' . error '}'

    error       shift, and go to state 73
    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr                 go to state 74
    expr_list_semicolon  go to state 75
>>>>>>> nm3


state 57

<<<<<<< HEAD
   58 expr: STR_CONST .

    $default  reduce using rule 58 (expr)
=======
   49 expr: '(' . expr ')'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 76
>>>>>>> nm3


state 58

<<<<<<< HEAD
   57 expr: INT_CONST .

    $default  reduce using rule 57 (expr)
=======
   12 feature: OBJECTID ':' TYPEID ASSIGN expr .
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 12 (feature)
>>>>>>> nm3


state 59

<<<<<<< HEAD
   59 expr: BOOL_CONST .

    $default  reduce using rule 59 (expr)
=======
    9 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 86
>>>>>>> nm3


state 60

<<<<<<< HEAD
   22 expr: OBJECTID . ASSIGN expr
   27     | OBJECTID . '(' expr_list_comma ')'
   28     | OBJECTID . '(' ')'
   56     | OBJECTID .

    ASSIGN  shift, and go to state 75
    '('     shift, and go to state 76

    $default  reduce using rule 56 (expr)
=======
   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'
>>>>>>> nm3

    '{'  shift, and go to state 87


<<<<<<< HEAD
   54 expr: NOT . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 77
=======
state 61

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   24     | IF expr . THEN expr ELSE expr FI
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    THEN  shift, and go to state 88
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85
>>>>>>> nm3


state 62

<<<<<<< HEAD
   50 expr: '~' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 78
=======
   33 let_list: error . ',' let_list

    ','  shift, and go to state 89
>>>>>>> nm3


state 63

<<<<<<< HEAD
   31 expr: '{' . expr_list_semicolon '}'
   32     | '{' . error '}'

    error       shift, and go to state 79
    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr                 go to state 80
    expr_list_semicolon  go to state 81


state 64
=======
   29 let_list: OBJECTID . ':' TYPEID IN expr
   30         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   31         | OBJECTID . ':' TYPEID ',' let_list
   32         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list

    ':'  shift, and go to state 90
>>>>>>> nm3

   55 expr: '(' . expr ')'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

<<<<<<< HEAD
    expr  go to state 82
=======
   28 expr: LET let_list .

    $default  reduce using rule 28 (expr)
>>>>>>> nm3


state 65

<<<<<<< HEAD
   15 feature: OBJECTID ':' TYPEID ASSIGN expr .
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 15 (feature)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   25     | WHILE expr . LOOP expr POOL
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LOOP  shift, and go to state 91
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85
>>>>>>> nm3


state 66

<<<<<<< HEAD
   12 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 92
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   34     | CASE expr . OF case_list ESAC
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    OF   shift, and go to state 92
    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
>>>>>>> nm3


state 67

<<<<<<< HEAD
   13 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 93
=======
   38 expr: NEW TYPEID .

    $default  reduce using rule 38 (expr)
>>>>>>> nm3


state 68

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   29     | IF expr . THEN expr ELSE expr FI
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    THEN  shift, and go to state 94
    LE    shift, and go to state 83
    '<'   shift, and go to state 84
    '='   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '@'   shift, and go to state 90
    '.'   shift, and go to state 91
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   39     | ISVOID expr .
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 39 (expr)
>>>>>>> nm3


state 69

<<<<<<< HEAD
   34 let_list: OBJECTID . ':' TYPEID IN expr
   35         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   36         | OBJECTID . ':' TYPEID ',' let_list
   37         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list
   38         | OBJECTID . ':' TYPEID ASSIGN error ',' let_list
   39         | OBJECTID . ':' TYPEID ASSIGN error IN expr
=======
   17 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 93
>>>>>>> nm3

    ':'  shift, and go to state 95


<<<<<<< HEAD
state 70
=======
   22 expr: OBJECTID '(' . expr_list_comma ')'
   23     | OBJECTID '(' . ')'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57
    ')'         shift, and go to state 94

    expr             go to state 95
    expr_list_comma  go to state 96
>>>>>>> nm3

   33 expr: LET let_list .

    $default  reduce using rule 33 (expr)

<<<<<<< HEAD

state 71

   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   30     | WHILE expr . LOOP expr POOL
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LOOP  shift, and go to state 96
    LE    shift, and go to state 83
    '<'   shift, and go to state 84
    '='   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '@'   shift, and go to state 90
    '.'   shift, and go to state 91
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   48     | NOT expr .

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 48 (expr)
>>>>>>> nm3


state 72

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   40     | CASE expr . OF case_list ESAC
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    OF   shift, and go to state 97
    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | '~' expr .
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 44 (expr)
>>>>>>> nm3


state 73

<<<<<<< HEAD
   44 expr: NEW TYPEID .

    $default  reduce using rule 44 (expr)
=======
   27 expr: '{' error . '}'

    '}'  shift, and go to state 97
>>>>>>> nm3


state 74

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   45     | ISVOID expr .
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 45 (expr)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   54 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ';'  shift, and go to state 98
>>>>>>> nm3


state 75

<<<<<<< HEAD
   22 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 98
=======
   26 expr: '{' expr_list_semicolon . '}'
   55 expr_list_semicolon: expr_list_semicolon . expr ';'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '}'         shift, and go to state 99
    '('         shift, and go to state 57

    expr  go to state 100
>>>>>>> nm3


state 76

<<<<<<< HEAD
   27 expr: OBJECTID '(' . expr_list_comma ')'
   28     | OBJECTID '(' . ')'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64
    ')'         shift, and go to state 99

    expr             go to state 100
    expr_list_comma  go to state 101
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   49     | '(' expr . ')'

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ')'  shift, and go to state 101
>>>>>>> nm3


state 77

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   54     | NOT expr .

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 54 (expr)
=======
   46 expr: expr LE . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 102
>>>>>>> nm3


state 78

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | '~' expr .
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 50 (expr)
=======
   45 expr: expr '<' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 103
>>>>>>> nm3


state 79

<<<<<<< HEAD
   32 expr: '{' error . '}'
   62 expr_list_semicolon: error . ';'

    ';'  shift, and go to state 102
    '}'  shift, and go to state 103
=======
   47 expr: expr '=' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 104
>>>>>>> nm3


state 80

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   60 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    ';'  shift, and go to state 104
=======
   40 expr: expr '+' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 105
>>>>>>> nm3


state 81

<<<<<<< HEAD
   31 expr: '{' expr_list_semicolon . '}'
   61 expr_list_semicolon: expr_list_semicolon . expr ';'
   63                    | expr_list_semicolon . error ';'

    error       shift, and go to state 105
    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '}'         shift, and go to state 106
    '('         shift, and go to state 64

    expr  go to state 107
=======
   41 expr: expr '-' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 106
>>>>>>> nm3


state 82

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   55     | '(' expr . ')'

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    ')'  shift, and go to state 108
=======
   42 expr: expr '*' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 107
>>>>>>> nm3


state 83

<<<<<<< HEAD
   52 expr: expr LE . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 109
=======
   43 expr: expr '/' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 108
>>>>>>> nm3


state 84

<<<<<<< HEAD
   51 expr: expr '<' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 110
=======
   18 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 109
>>>>>>> nm3


state 85

<<<<<<< HEAD
   53 expr: expr '=' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 111
=======
   20 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   21     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 110
>>>>>>> nm3


state 86

<<<<<<< HEAD
   46 expr: expr '+' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 112
=======
    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    '}'  shift, and go to state 111
>>>>>>> nm3


state 87

<<<<<<< HEAD
   47 expr: expr '-' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 113
=======
   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 112
>>>>>>> nm3


state 88

<<<<<<< HEAD
   48 expr: expr '*' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64
=======
   24 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 113
>>>>>>> nm3

    expr  go to state 114


<<<<<<< HEAD
state 89

   49 expr: expr '/' . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 115
=======
   33 let_list: error ',' . let_list

    error     shift, and go to state 62
    OBJECTID  shift, and go to state 63

    let_list  go to state 114
>>>>>>> nm3


state 90

<<<<<<< HEAD
   23 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 116
=======
   29 let_list: OBJECTID ':' . TYPEID IN expr
   30         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   31         | OBJECTID ':' . TYPEID ',' let_list
   32         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list

    TYPEID  shift, and go to state 115
>>>>>>> nm3


state 91

<<<<<<< HEAD
   25 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   26     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 117
=======
   25 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 116
>>>>>>> nm3


state 92

<<<<<<< HEAD
   12 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    '}'  shift, and go to state 118
=======
   34 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 117

    case       go to state 118
    case_list  go to state 119
>>>>>>> nm3


state 93

<<<<<<< HEAD
   13 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 119
=======
   17 expr: OBJECTID ASSIGN expr .
   18     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 17 (expr)
>>>>>>> nm3


state 94

<<<<<<< HEAD
   29 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 120
=======
   23 expr: OBJECTID '(' ')' .

    $default  reduce using rule 23 (expr)
>>>>>>> nm3


state 95

<<<<<<< HEAD
   34 let_list: OBJECTID ':' . TYPEID IN expr
   35         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   36         | OBJECTID ':' . TYPEID ',' let_list
   37         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list
   38         | OBJECTID ':' . TYPEID ASSIGN error ',' let_list
   39         | OBJECTID ':' . TYPEID ASSIGN error IN expr

    TYPEID  shift, and go to state 121
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   56 expr_list_comma: expr .

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 56 (expr_list_comma)
>>>>>>> nm3


state 96

<<<<<<< HEAD
   30 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 122
=======
   22 expr: OBJECTID '(' expr_list_comma . ')'
   57 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 120
    ','  shift, and go to state 121
>>>>>>> nm3


state 97

<<<<<<< HEAD
   40 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 123
=======
   27 expr: '{' error '}' .

    $default  reduce using rule 27 (expr)
>>>>>>> nm3

    case       go to state 124
    case_list  go to state 125


<<<<<<< HEAD
state 98

   22 expr: OBJECTID ASSIGN expr .
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 22 (expr)
=======
   54 expr_list_semicolon: expr ';' .

    $default  reduce using rule 54 (expr_list_semicolon)
>>>>>>> nm3


state 99

<<<<<<< HEAD
   28 expr: OBJECTID '(' ')' .

    $default  reduce using rule 28 (expr)
=======
   26 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 26 (expr)
>>>>>>> nm3


state 100

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   64 expr_list_comma: expr .

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 64 (expr_list_comma)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   55 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ';'  shift, and go to state 122
>>>>>>> nm3


state 101

<<<<<<< HEAD
   27 expr: OBJECTID '(' expr_list_comma . ')'
   65 expr_list_comma: expr_list_comma . ',' expr
   66                | expr_list_comma . ',' error

    ')'  shift, and go to state 126
    ','  shift, and go to state 127
=======
   49 expr: '(' expr ')' .

    $default  reduce using rule 49 (expr)
>>>>>>> nm3


state 102

<<<<<<< HEAD
   62 expr_list_semicolon: error ';' .

    $default  reduce using rule 62 (expr_list_semicolon)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   46     | expr LE expr .
   47     | expr . '=' expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 46 (expr)
>>>>>>> nm3


state 103

<<<<<<< HEAD
   32 expr: '{' error '}' .

    $default  reduce using rule 32 (expr)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   45     | expr '<' expr .
   46     | expr . LE expr
   47     | expr . '=' expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 45 (expr)
>>>>>>> nm3


state 104

<<<<<<< HEAD
   60 expr_list_semicolon: expr ';' .

    $default  reduce using rule 60 (expr_list_semicolon)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   47     | expr '=' expr .

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 47 (expr)
>>>>>>> nm3


state 105

<<<<<<< HEAD
   63 expr_list_semicolon: expr_list_semicolon error . ';'

    ';'  shift, and go to state 128
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   40     | expr '+' expr .
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 40 (expr)
>>>>>>> nm3


state 106

<<<<<<< HEAD
   31 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 31 (expr)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   41     | expr '-' expr .
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 41 (expr)
>>>>>>> nm3


state 107

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   61 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    ';'  shift, and go to state 129
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   42     | expr '*' expr .
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 42 (expr)
>>>>>>> nm3


state 108

<<<<<<< HEAD
   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   43     | expr '/' expr .
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 43 (expr)
>>>>>>> nm3


state 109

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   52     | expr LE expr .
   53     | expr . '=' expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 52 (expr)
=======
   18 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   19     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 123
>>>>>>> nm3


state 110

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   51     | expr '<' expr .
   52     | expr . LE expr
   53     | expr . '=' expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 51 (expr)
=======
   20 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   21     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 124
>>>>>>> nm3


state 111

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   53     | expr '=' expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 53 (expr)
=======
    9 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)
>>>>>>> nm3


state 112

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   46     | expr '+' expr .
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 46 (expr)
=======
   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    '}'  shift, and go to state 125
>>>>>>> nm3


state 113

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 47 (expr)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   24     | IF expr THEN expr . ELSE expr FI
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    ELSE  shift, and go to state 126
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85
>>>>>>> nm3


state 114

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   48     | expr '*' expr .
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 48 (expr)
=======
   33 let_list: error ',' let_list .

    $default  reduce using rule 33 (let_list)
>>>>>>> nm3


state 115

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 49 (expr)
=======
   29 let_list: OBJECTID ':' TYPEID . IN expr
   30         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   31         | OBJECTID ':' TYPEID . ',' let_list
   32         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list

    IN      shift, and go to state 127
    ASSIGN  shift, and go to state 128
    ','     shift, and go to state 129
>>>>>>> nm3


state 116

<<<<<<< HEAD
   23 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   24     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 130
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   25     | WHILE expr LOOP expr . POOL
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    POOL  shift, and go to state 130
    LE    shift, and go to state 77
    '<'   shift, and go to state 78
    '='   shift, and go to state 79
    '+'   shift, and go to state 80
    '-'   shift, and go to state 81
    '*'   shift, and go to state 82
    '/'   shift, and go to state 83
    '@'   shift, and go to state 84
    '.'   shift, and go to state 85
>>>>>>> nm3


state 117

<<<<<<< HEAD
   25 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   26     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 131
=======
   35 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 131
>>>>>>> nm3


state 118

<<<<<<< HEAD
   12 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .
=======
   36 case_list: case .

    $default  reduce using rule 36 (case_list)
>>>>>>> nm3

    $default  reduce using rule 12 (feature)


<<<<<<< HEAD
state 119

   13 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    '}'  shift, and go to state 132
=======
   34 expr: CASE expr OF case_list . ESAC
   37 case_list: case_list . case

    ESAC      shift, and go to state 132
    OBJECTID  shift, and go to state 117

    case  go to state 133
>>>>>>> nm3


state 120

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   29     | IF expr THEN expr . ELSE expr FI
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    ELSE  shift, and go to state 133
    LE    shift, and go to state 83
    '<'   shift, and go to state 84
    '='   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '@'   shift, and go to state 90
    '.'   shift, and go to state 91
=======
   22 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 22 (expr)
>>>>>>> nm3


state 121

<<<<<<< HEAD
   34 let_list: OBJECTID ':' TYPEID . IN expr
   35         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   36         | OBJECTID ':' TYPEID . ',' let_list
   37         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list
   38         | OBJECTID ':' TYPEID . ASSIGN error ',' let_list
   39         | OBJECTID ':' TYPEID . ASSIGN error IN expr

    IN      shift, and go to state 134
    ASSIGN  shift, and go to state 135
    ','     shift, and go to state 136
=======
   57 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 134
>>>>>>> nm3


state 122

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   30     | WHILE expr LOOP expr . POOL
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    POOL  shift, and go to state 137
    LE    shift, and go to state 83
    '<'   shift, and go to state 84
    '='   shift, and go to state 85
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89
    '@'   shift, and go to state 90
    '.'   shift, and go to state 91
=======
   55 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 55 (expr_list_semicolon)
>>>>>>> nm3


state 123

<<<<<<< HEAD
   41 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 138
=======
   18 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   19     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 135
>>>>>>> nm3


state 124

<<<<<<< HEAD
   42 case_list: case .

    $default  reduce using rule 42 (case_list)
=======
   20 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   21     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57
    ')'         shift, and go to state 136

    expr             go to state 95
    expr_list_comma  go to state 137
>>>>>>> nm3


state 125

<<<<<<< HEAD
   40 expr: CASE expr OF case_list . ESAC
   43 case_list: case_list . case

    ESAC      shift, and go to state 139
    OBJECTID  shift, and go to state 123

    case  go to state 140
=======
   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)
>>>>>>> nm3


state 126

<<<<<<< HEAD
   27 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 27 (expr)
=======
   24 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 138
>>>>>>> nm3


state 127

<<<<<<< HEAD
   65 expr_list_comma: expr_list_comma ',' . expr
   66                | expr_list_comma ',' . error

    error       shift, and go to state 141
    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 142
=======
   29 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 139
>>>>>>> nm3


state 128

<<<<<<< HEAD
   63 expr_list_semicolon: expr_list_semicolon error ';' .
=======
   30 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   32         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 140
>>>>>>> nm3

    $default  reduce using rule 63 (expr_list_semicolon)


<<<<<<< HEAD
state 129

   61 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 61 (expr_list_semicolon)
=======
   31 let_list: OBJECTID ':' TYPEID ',' . let_list

    error     shift, and go to state 62
    OBJECTID  shift, and go to state 63

    let_list  go to state 141
>>>>>>> nm3


state 130

<<<<<<< HEAD
   23 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   24     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 143
=======
   25 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 25 (expr)
>>>>>>> nm3


state 131

<<<<<<< HEAD
   25 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   26     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64
    ')'         shift, and go to state 144

    expr             go to state 100
    expr_list_comma  go to state 145
=======
   35 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 142
>>>>>>> nm3


state 132

<<<<<<< HEAD
   13 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 13 (feature)
=======
   34 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 34 (expr)
>>>>>>> nm3


state 133

<<<<<<< HEAD
   29 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 146
=======
   37 case_list: case_list case .
>>>>>>> nm3

    $default  reduce using rule 37 (case_list)

<<<<<<< HEAD
state 134

   34 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 147
=======

state 134

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr
   57 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 57 (expr_list_comma)
>>>>>>> nm3


state 135

<<<<<<< HEAD
   35 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   37         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list
   38         | OBJECTID ':' TYPEID ASSIGN . error ',' let_list
   39         | OBJECTID ':' TYPEID ASSIGN . error IN expr

    error       shift, and go to state 148
    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 149
=======
   18 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   19     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 143
>>>>>>> nm3


state 136

<<<<<<< HEAD
   36 let_list: OBJECTID ':' TYPEID ',' . let_list

    OBJECTID  shift, and go to state 69

    let_list  go to state 150
=======
   21 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 21 (expr)
>>>>>>> nm3


state 137

<<<<<<< HEAD
   30 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 30 (expr)
=======
   20 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   57 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 144
    ','  shift, and go to state 121
>>>>>>> nm3


state 138

<<<<<<< HEAD
   41 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 151
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   24     | IF expr THEN expr ELSE expr . FI
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    FI   shift, and go to state 145
    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
>>>>>>> nm3


state 139

<<<<<<< HEAD
   40 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 40 (expr)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   29 let_list: OBJECTID ':' TYPEID IN expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 29 (let_list)
>>>>>>> nm3


state 140

<<<<<<< HEAD
   43 case_list: case_list case .

    $default  reduce using rule 43 (case_list)
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   30 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   32         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    IN   shift, and go to state 146
    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ','  shift, and go to state 147
>>>>>>> nm3


state 141

<<<<<<< HEAD
   66 expr_list_comma: expr_list_comma ',' error .

    $default  reduce using rule 66 (expr_list_comma)
=======
   31 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 31 (let_list)
>>>>>>> nm3


state 142

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr
   65 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 65 (expr_list_comma)
=======
   35 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 148
>>>>>>> nm3


state 143

<<<<<<< HEAD
   23 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   24     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 152
=======
   18 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   19     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57
    ')'         shift, and go to state 149

    expr             go to state 95
    expr_list_comma  go to state 150
>>>>>>> nm3


state 144

<<<<<<< HEAD
   26 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 26 (expr)
=======
   20 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 20 (expr)
>>>>>>> nm3


state 145

<<<<<<< HEAD
   25 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   65 expr_list_comma: expr_list_comma . ',' expr
   66                | expr_list_comma . ',' error

    ')'  shift, and go to state 153
    ','  shift, and go to state 127
=======
   24 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 24 (expr)
>>>>>>> nm3


state 146

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   29     | IF expr THEN expr ELSE expr . FI
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    FI   shift, and go to state 154
    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
=======
   30 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 151
>>>>>>> nm3


state 147

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   34 let_list: OBJECTID ':' TYPEID IN expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 34 (let_list)
=======
   32 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    error     shift, and go to state 62
    OBJECTID  shift, and go to state 63

    let_list  go to state 152
>>>>>>> nm3


state 148

<<<<<<< HEAD
   38 let_list: OBJECTID ':' TYPEID ASSIGN error . ',' let_list
   39         | OBJECTID ':' TYPEID ASSIGN error . IN expr

    IN   shift, and go to state 155
    ','  shift, and go to state 156
=======
   35 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 44
    LET         shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    NEW         shift, and go to state 48
    ISVOID      shift, and go to state 49
    STR_CONST   shift, and go to state 50
    INT_CONST   shift, and go to state 51
    BOOL_CONST  shift, and go to state 52
    OBJECTID    shift, and go to state 53
    NOT         shift, and go to state 54
    '~'         shift, and go to state 55
    '{'         shift, and go to state 56
    '('         shift, and go to state 57

    expr  go to state 153
>>>>>>> nm3


state 149

<<<<<<< HEAD
   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   35 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   37         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    IN   shift, and go to state 157
    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    ','  shift, and go to state 158
=======
   19 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 19 (expr)
>>>>>>> nm3


state 150

<<<<<<< HEAD
   36 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 36 (let_list)
=======
   18 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   57 expr_list_comma: expr_list_comma . ',' expr

    ')'  shift, and go to state 154
    ','  shift, and go to state 121
>>>>>>> nm3


state 151

<<<<<<< HEAD
   41 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 159
=======
   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   30 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85

    $default  reduce using rule 30 (let_list)
>>>>>>> nm3


state 152

<<<<<<< HEAD
   23 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   24     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64
    ')'         shift, and go to state 160

    expr             go to state 100
    expr_list_comma  go to state 161
=======
   32 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .
>>>>>>> nm3

    $default  reduce using rule 32 (let_list)


<<<<<<< HEAD
   25 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 25 (expr)
=======
state 153

   18 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   20     | expr . '.' OBJECTID '(' expr_list_comma ')'
   21     | expr . '.' OBJECTID '(' ')'
   35 case: OBJECTID ':' TYPEID DARROW expr . ';'
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . LE expr
   47     | expr . '=' expr

    LE   shift, and go to state 77
    '<'  shift, and go to state 78
    '='  shift, and go to state 79
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '@'  shift, and go to state 84
    '.'  shift, and go to state 85
    ';'  shift, and go to state 155
>>>>>>> nm3


state 154

<<<<<<< HEAD
   29 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 29 (expr)
=======
   18 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 18 (expr)
>>>>>>> nm3


state 155

<<<<<<< HEAD
   39 let_list: OBJECTID ':' TYPEID ASSIGN error IN . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 162


state 156

   38 let_list: OBJECTID ':' TYPEID ASSIGN error ',' . let_list

    OBJECTID  shift, and go to state 69

    let_list  go to state 163


state 157

   35 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 164


state 158

   37 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    OBJECTID  shift, and go to state 69

    let_list  go to state 165


state 159

   41 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 51
    LET         shift, and go to state 52
    WHILE       shift, and go to state 53
    CASE        shift, and go to state 54
    NEW         shift, and go to state 55
    ISVOID      shift, and go to state 56
    STR_CONST   shift, and go to state 57
    INT_CONST   shift, and go to state 58
    BOOL_CONST  shift, and go to state 59
    OBJECTID    shift, and go to state 60
    NOT         shift, and go to state 61
    '~'         shift, and go to state 62
    '{'         shift, and go to state 63
    '('         shift, and go to state 64

    expr  go to state 166


state 160

   24 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 24 (expr)


state 161

   23 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   65 expr_list_comma: expr_list_comma . ',' expr
   66                | expr_list_comma . ',' error

    ')'  shift, and go to state 167
    ','  shift, and go to state 127


state 162

   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   39 let_list: OBJECTID ':' TYPEID ASSIGN error IN expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 39 (let_list)


state 163

   38 let_list: OBJECTID ':' TYPEID ASSIGN error ',' let_list .

    $default  reduce using rule 38 (let_list)


state 164

   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   35 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91

    $default  reduce using rule 35 (let_list)


state 165

   37 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 37 (let_list)


state 166

   23 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   24     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   25     | expr . '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' ')'
   41 case: OBJECTID ':' TYPEID DARROW expr . ';'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   51     | expr . '<' expr
   52     | expr . LE expr
   53     | expr . '=' expr

    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '='  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '@'  shift, and go to state 90
    '.'  shift, and go to state 91
    ';'  shift, and go to state 168


state 167

   23 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 23 (expr)


state 168

   41 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 41 (case)
=======
   35 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 35 (case)
>>>>>>> nm3
