Terminals unused in grammar

   ERROR


State 19 conflicts: 2 shift/reduce
State 28 conflicts: 2 shift/reduce
State 34 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'

    4 class: CLASS TYPEID '{' feature_list '}'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'
    6      | CLASS TYPEID '{' '}'
    7      | CLASS TYPEID INHERITS TYPEID '{' '}'

    8 feature_list: feature ';'
    9             | feature_list feature ';'

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID ':' TYPEID
   13        | OBJECTID ':' TYPEID ASSIGN expr

   14 feature_list: error ';'
   15             | feature_list error ';'
   16             | error ';' feature_list
   17             | feature_list error ';' feature_list

   18 formal_list: formal
   19            | formal_list ',' formal

   20 formal: OBJECTID ':' TYPEID

   21 expr: OBJECTID ASSIGN expr
   22     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr '.' OBJECTID '(' expr_list_comma ')'
   25     | expr '.' OBJECTID '(' ')'
   26     | OBJECTID '(' expr_list_comma ')'
   27     | OBJECTID '(' ')'
   28     | IF expr THEN expr ELSE expr FI
   29     | WHILE expr LOOP expr POOL
   30     | '{' expr_list_semicolon '}'
   31     | '{' error '}'
   32     | LET let_list

   33 let_list: OBJECTID ':' TYPEID IN expr
   34         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   35         | OBJECTID ':' TYPEID ',' let_list
   36         | OBJECTID ':' TYPEID ASSIGN expr ',' let_list
   37         | OBJECTID ':' TYPEID ASSIGN error ',' let_list
   38         | OBJECTID ':' TYPEID ASSIGN error IN expr

   39 expr: CASE expr OF case_list ESAC

   40 case: OBJECTID ':' TYPEID DARROW expr ';'

   41 case_list: case
   42          | case_list case

   43 expr: NEW TYPEID
   44     | ISVOID expr
   45     | expr '+' expr
   46     | expr '-' expr
   47     | expr '*' expr
   48     | expr '/' expr
   49     | '~' expr
   50     | expr '<' expr
   51     | expr LE expr
   52     | expr '=' expr
   53     | NOT expr
   54     | '(' expr ')'
   55     | OBJECTID
   56     | INT_CONST
   57     | STR_CONST
   58     | BOOL_CONST

   59 expr_list_semicolon: expr ';'
   60                    | expr_list_semicolon expr ';'
   61                    | error ';'
   62                    | expr_list_semicolon error ';'

   63 expr_list_comma: expr
   64                | expr_list_comma ',' expr
   65                | expr_list_comma ',' error


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 22 23 24 25 26 27 54
')' (41) 10 11 22 23 24 25 26 27 54
'*' (42) 47
'+' (43) 45
',' (44) 19 35 36 37 64 65
'-' (45) 46
'.' (46) 22 23 24 25
'/' (47) 48
':' (58) 10 11 12 13 20 33 34 35 36 37 38 40
';' (59) 2 3 8 9 14 15 16 17 40 59 60 61 62
'<' (60) 50
'=' (61) 52
'@' (64) 22 23
'{' (123) 4 5 6 7 10 11 30 31
'}' (125) 4 5 6 7 10 11 30 31
'~' (126) 49
error (256) 14 15 16 17 31 37 38 61 62 65
CLASS (258) 4 5 6 7
ELSE (259) 28
FI (260) 28
IF (261) 28
IN (262) 33 34 38
INHERITS (263) 5 7
LET (264) 32
LOOP (265) 29
POOL (266) 29
THEN (267) 28
WHILE (268) 29
CASE (269) 39
ESAC (270) 39
OF (271) 39
DARROW (272) 40
NEW (273) 43
ISVOID (274) 44
STR_CONST (275) 57
INT_CONST (276) 56
BOOL_CONST (277) 58
TYPEID (278) 4 5 6 7 10 11 12 13 20 22 23 33 34 35 36 37 38 40 43
OBJECTID (279) 10 11 12 13 20 21 22 23 24 25 26 27 33 34 35 36 37 38
    40 55
ASSIGN (280) 13 21 34 36 37 38
NOT (281) 53
LE (282) 51
ERROR (283)
LET_PREC (285)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
class_list (48)
    on left: 2 3, on right: 1 3
class (49)
    on left: 4 5 6 7, on right: 2 3
feature_list (50)
    on left: 8 9 14 15 16 17, on right: 4 5 9 15 16 17
feature (51)
    on left: 10 11 12 13, on right: 8 9
formal_list (52)
    on left: 18 19, on right: 11 19
formal (53)
    on left: 20, on right: 18 19
expr (54)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 39 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58, on right: 10 11 13 21 22 23 24
    25 28 29 33 34 36 38 39 40 44 45 46 47 48 49 50 51 52 53 54 59
    60 63 64
let_list (55)
    on left: 33 34 35 36 37 38, on right: 32 35 36 37
case (56)
    on left: 40, on right: 41 42
case_list (57)
    on left: 41 42, on right: 39 42
expr_list_semicolon (58)
    on left: 59 60 61 62, on right: 30 60 62
expr_list_comma (59)
    on left: 63 64 65, on right: 22 24 26 64 65


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}'
    6      | CLASS . TYPEID '{' '}'
    7      | CLASS . TYPEID INHERITS TYPEID '{' '}'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class ';'

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class . ';'

    ';'  shift, and go to state 8


state 5

    4 class: CLASS TYPEID . '{' feature_list '}'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}'
    6      | CLASS TYPEID . '{' '}'
    7      | CLASS TYPEID . INHERITS TYPEID '{' '}'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 11


state 8

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


state 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}'
    7      | CLASS TYPEID INHERITS . TYPEID '{' '}'

    TYPEID  shift, and go to state 12


state 10

    4 class: CLASS TYPEID '{' . feature_list '}'
    6      | CLASS TYPEID '{' . '}'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 15

    feature_list  go to state 16
    feature       go to state 17


state 11

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


state 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}'
    7      | CLASS TYPEID INHERITS TYPEID . '{' '}'

    '{'  shift, and go to state 18


state 13

   14 feature_list: error . ';'
   16             | error . ';' feature_list

    ';'  shift, and go to state 19


state 14

   10 feature: OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID . ':' TYPEID
   13        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 20
    ':'  shift, and go to state 21


state 15

    6 class: CLASS TYPEID '{' '}' .

    $default  reduce using rule 6 (class)


state 16

    4 class: CLASS TYPEID '{' feature_list . '}'
    9 feature_list: feature_list . feature ';'
   15             | feature_list . error ';'
   17             | feature_list . error ';' feature_list

    error     shift, and go to state 22
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 23

    feature  go to state 24


state 17

    8 feature_list: feature . ';'

    ';'  shift, and go to state 25


state 18

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}'
    7      | CLASS TYPEID INHERITS TYPEID '{' . '}'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 26

    feature_list  go to state 27
    feature       go to state 17


state 19

   14 feature_list: error ';' .
   16             | error ';' . feature_list

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    error     [reduce using rule 14 (feature_list)]
    OBJECTID  [reduce using rule 14 (feature_list)]
    '}'       reduce using rule 14 (feature_list)

    feature_list  go to state 28
    feature       go to state 17


state 20

   10 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 29
    ')'       shift, and go to state 30

    formal_list  go to state 31
    formal       go to state 32


state 21

   12 feature: OBJECTID ':' . TYPEID
   13        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 33


state 22

   15 feature_list: feature_list error . ';'
   17             | feature_list error . ';' feature_list

    ';'  shift, and go to state 34


state 23

    4 class: CLASS TYPEID '{' feature_list '}' .

    $default  reduce using rule 4 (class)


state 24

    9 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 35


state 25

    8 feature_list: feature ';' .

    $default  reduce using rule 8 (feature_list)


state 26

    7 class: CLASS TYPEID INHERITS TYPEID '{' '}' .

    $default  reduce using rule 7 (class)


state 27

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
    9 feature_list: feature_list . feature ';'
   15             | feature_list . error ';'
   17             | feature_list . error ';' feature_list

    error     shift, and go to state 22
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 36

    feature  go to state 24


state 28

    9 feature_list: feature_list . feature ';'
   15             | feature_list . error ';'
   16             | error ';' feature_list .
   17             | feature_list . error ';' feature_list

    error     shift, and go to state 22
    OBJECTID  shift, and go to state 14

    error     [reduce using rule 16 (feature_list)]
    OBJECTID  [reduce using rule 16 (feature_list)]
    '}'       reduce using rule 16 (feature_list)

    feature  go to state 24


state 29

   20 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 37


state 30

   10 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 38


state 31

   11 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   19 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 39
    ','  shift, and go to state 40


state 32

   18 formal_list: formal .

    $default  reduce using rule 18 (formal_list)


state 33

   12 feature: OBJECTID ':' TYPEID .
   13        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 41

    $default  reduce using rule 12 (feature)


state 34

   15 feature_list: feature_list error ';' .
   17             | feature_list error ';' . feature_list

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    error     [reduce using rule 15 (feature_list)]
    OBJECTID  [reduce using rule 15 (feature_list)]
    '}'       reduce using rule 15 (feature_list)

    feature_list  go to state 42
    feature       go to state 17


state 35

    9 feature_list: feature_list feature ';' .

    $default  reduce using rule 9 (feature_list)


state 36

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 5 (class)


state 37

   20 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 43


state 38

   10 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 44


state 39

   11 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 45


state 40

   19 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 29

    formal  go to state 46


state 41

   13 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 61


state 42

    9 feature_list: feature_list . feature ';'
   15             | feature_list . error ';'
   17             | feature_list . error ';' feature_list
   17             | feature_list error ';' feature_list .

    error     shift, and go to state 22
    OBJECTID  shift, and go to state 14

    error     [reduce using rule 17 (feature_list)]
    OBJECTID  [reduce using rule 17 (feature_list)]
    '}'       reduce using rule 17 (feature_list)

    feature  go to state 24


state 43

   20 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 20 (formal)


state 44

   10 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 62


state 45

   11 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 63


state 46

   19 formal_list: formal_list ',' formal .

    $default  reduce using rule 19 (formal_list)


state 47

   28 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 64


state 48

   32 expr: LET . let_list

    OBJECTID  shift, and go to state 65

    let_list  go to state 66


state 49

   29 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 67


state 50

   39 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 68


state 51

   43 expr: NEW . TYPEID

    TYPEID  shift, and go to state 69


state 52

   44 expr: ISVOID . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 70


state 53

   57 expr: STR_CONST .

    $default  reduce using rule 57 (expr)


state 54

   56 expr: INT_CONST .

    $default  reduce using rule 56 (expr)


state 55

   58 expr: BOOL_CONST .

    $default  reduce using rule 58 (expr)


state 56

   21 expr: OBJECTID . ASSIGN expr
   26     | OBJECTID . '(' expr_list_comma ')'
   27     | OBJECTID . '(' ')'
   55     | OBJECTID .

    ASSIGN  shift, and go to state 71
    '('     shift, and go to state 72

    $default  reduce using rule 55 (expr)


state 57

   53 expr: NOT . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 73


state 58

   49 expr: '~' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 74


state 59

   30 expr: '{' . expr_list_semicolon '}'
   31     | '{' . error '}'

    error       shift, and go to state 75
    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr                 go to state 76
    expr_list_semicolon  go to state 77


state 60

   54 expr: '(' . expr ')'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 78


state 61

   13 feature: OBJECTID ':' TYPEID ASSIGN expr .
   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 13 (feature)


state 62

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 88


state 63

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 89


state 64

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   28     | IF expr . THEN expr ELSE expr FI
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    THEN  shift, and go to state 90
    LE    shift, and go to state 79
    '<'   shift, and go to state 80
    '='   shift, and go to state 81
    '+'   shift, and go to state 82
    '-'   shift, and go to state 83
    '*'   shift, and go to state 84
    '/'   shift, and go to state 85
    '@'   shift, and go to state 86
    '.'   shift, and go to state 87


state 65

   33 let_list: OBJECTID . ':' TYPEID IN expr
   34         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   35         | OBJECTID . ':' TYPEID ',' let_list
   36         | OBJECTID . ':' TYPEID ASSIGN expr ',' let_list
   37         | OBJECTID . ':' TYPEID ASSIGN error ',' let_list
   38         | OBJECTID . ':' TYPEID ASSIGN error IN expr

    ':'  shift, and go to state 91


state 66

   32 expr: LET let_list .

    $default  reduce using rule 32 (expr)


state 67

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   29     | WHILE expr . LOOP expr POOL
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LOOP  shift, and go to state 92
    LE    shift, and go to state 79
    '<'   shift, and go to state 80
    '='   shift, and go to state 81
    '+'   shift, and go to state 82
    '-'   shift, and go to state 83
    '*'   shift, and go to state 84
    '/'   shift, and go to state 85
    '@'   shift, and go to state 86
    '.'   shift, and go to state 87


state 68

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   39     | CASE expr . OF case_list ESAC
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    OF   shift, and go to state 93
    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87


state 69

   43 expr: NEW TYPEID .

    $default  reduce using rule 43 (expr)


state 70

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   44     | ISVOID expr .
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 44 (expr)


state 71

   21 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 94


state 72

   26 expr: OBJECTID '(' . expr_list_comma ')'
   27     | OBJECTID '(' . ')'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60
    ')'         shift, and go to state 95

    expr             go to state 96
    expr_list_comma  go to state 97


state 73

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   53     | NOT expr .

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 53 (expr)


state 74

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   49     | '~' expr .
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 49 (expr)


state 75

   31 expr: '{' error . '}'
   61 expr_list_semicolon: error . ';'

    ';'  shift, and go to state 98
    '}'  shift, and go to state 99


state 76

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   59 expr_list_semicolon: expr . ';'

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    ';'  shift, and go to state 100


state 77

   30 expr: '{' expr_list_semicolon . '}'
   60 expr_list_semicolon: expr_list_semicolon . expr ';'
   62                    | expr_list_semicolon . error ';'

    error       shift, and go to state 101
    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '}'         shift, and go to state 102
    '('         shift, and go to state 60

    expr  go to state 103


state 78

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   54     | '(' expr . ')'

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    ')'  shift, and go to state 104


state 79

   51 expr: expr LE . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 105


state 80

   50 expr: expr '<' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 106


state 81

   52 expr: expr '=' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 107


state 82

   45 expr: expr '+' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 108


state 83

   46 expr: expr '-' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 109


state 84

   47 expr: expr '*' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 110


state 85

   48 expr: expr '/' . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 111


state 86

   22 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '@' . TYPEID '.' OBJECTID '(' ')'

    TYPEID  shift, and go to state 112


state 87

   24 expr: expr '.' . OBJECTID '(' expr_list_comma ')'
   25     | expr '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 113


state 88

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    '}'  shift, and go to state 114


state 89

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 115


state 90

   28 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 116


state 91

   33 let_list: OBJECTID ':' . TYPEID IN expr
   34         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   35         | OBJECTID ':' . TYPEID ',' let_list
   36         | OBJECTID ':' . TYPEID ASSIGN expr ',' let_list
   37         | OBJECTID ':' . TYPEID ASSIGN error ',' let_list
   38         | OBJECTID ':' . TYPEID ASSIGN error IN expr

    TYPEID  shift, and go to state 117


state 92

   29 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 118


state 93

   39 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 119

    case       go to state 120
    case_list  go to state 121


state 94

   21 expr: OBJECTID ASSIGN expr .
   22     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 21 (expr)


state 95

   27 expr: OBJECTID '(' ')' .

    $default  reduce using rule 27 (expr)


state 96

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   63 expr_list_comma: expr .

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 63 (expr_list_comma)


state 97

   26 expr: OBJECTID '(' expr_list_comma . ')'
   64 expr_list_comma: expr_list_comma . ',' expr
   65                | expr_list_comma . ',' error

    ')'  shift, and go to state 122
    ','  shift, and go to state 123


state 98

   61 expr_list_semicolon: error ';' .

    $default  reduce using rule 61 (expr_list_semicolon)


state 99

   31 expr: '{' error '}' .

    $default  reduce using rule 31 (expr)


state 100

   59 expr_list_semicolon: expr ';' .

    $default  reduce using rule 59 (expr_list_semicolon)


state 101

   62 expr_list_semicolon: expr_list_semicolon error . ';'

    ';'  shift, and go to state 124


state 102

   30 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 30 (expr)


state 103

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   60 expr_list_semicolon: expr_list_semicolon expr . ';'

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    ';'  shift, and go to state 125


state 104

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


state 105

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   51     | expr LE expr .
   52     | expr . '=' expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 51 (expr)


state 106

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   50     | expr '<' expr .
   51     | expr . LE expr
   52     | expr . '=' expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 50 (expr)


state 107

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   52     | expr '=' expr .

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 52 (expr)


state 108

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   45     | expr '+' expr .
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 45 (expr)


state 109

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   46     | expr '-' expr .
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 46 (expr)


state 110

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   47     | expr '*' expr .
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 47 (expr)


state 111

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   48     | expr '/' expr .
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 48 (expr)


state 112

   22 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'
   23     | expr '@' TYPEID . '.' OBJECTID '(' ')'

    '.'  shift, and go to state 126


state 113

   24 expr: expr '.' OBJECTID . '(' expr_list_comma ')'
   25     | expr '.' OBJECTID . '(' ')'

    '('  shift, and go to state 127


state 114

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 115

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    '}'  shift, and go to state 128


state 116

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   28     | IF expr THEN expr . ELSE expr FI
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    ELSE  shift, and go to state 129
    LE    shift, and go to state 79
    '<'   shift, and go to state 80
    '='   shift, and go to state 81
    '+'   shift, and go to state 82
    '-'   shift, and go to state 83
    '*'   shift, and go to state 84
    '/'   shift, and go to state 85
    '@'   shift, and go to state 86
    '.'   shift, and go to state 87


state 117

   33 let_list: OBJECTID ':' TYPEID . IN expr
   34         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   35         | OBJECTID ':' TYPEID . ',' let_list
   36         | OBJECTID ':' TYPEID . ASSIGN expr ',' let_list
   37         | OBJECTID ':' TYPEID . ASSIGN error ',' let_list
   38         | OBJECTID ':' TYPEID . ASSIGN error IN expr

    IN      shift, and go to state 130
    ASSIGN  shift, and go to state 131
    ','     shift, and go to state 132


state 118

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   29     | WHILE expr LOOP expr . POOL
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    POOL  shift, and go to state 133
    LE    shift, and go to state 79
    '<'   shift, and go to state 80
    '='   shift, and go to state 81
    '+'   shift, and go to state 82
    '-'   shift, and go to state 83
    '*'   shift, and go to state 84
    '/'   shift, and go to state 85
    '@'   shift, and go to state 86
    '.'   shift, and go to state 87


state 119

   40 case: OBJECTID . ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 134


state 120

   41 case_list: case .

    $default  reduce using rule 41 (case_list)


state 121

   39 expr: CASE expr OF case_list . ESAC
   42 case_list: case_list . case

    ESAC      shift, and go to state 135
    OBJECTID  shift, and go to state 119

    case  go to state 136


state 122

   26 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 26 (expr)


state 123

   64 expr_list_comma: expr_list_comma ',' . expr
   65                | expr_list_comma ',' . error

    error       shift, and go to state 137
    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 138


state 124

   62 expr_list_semicolon: expr_list_semicolon error ';' .

    $default  reduce using rule 62 (expr_list_semicolon)


state 125

   60 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 60 (expr_list_semicolon)


state 126

   22 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'
   23     | expr '@' TYPEID '.' . OBJECTID '(' ')'

    OBJECTID  shift, and go to state 139


state 127

   24 expr: expr '.' OBJECTID '(' . expr_list_comma ')'
   25     | expr '.' OBJECTID '(' . ')'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60
    ')'         shift, and go to state 140

    expr             go to state 96
    expr_list_comma  go to state 141


state 128

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 11 (feature)


state 129

   28 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 142


state 130

   33 let_list: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 143


state 131

   34 let_list: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   36         | OBJECTID ':' TYPEID ASSIGN . expr ',' let_list
   37         | OBJECTID ':' TYPEID ASSIGN . error ',' let_list
   38         | OBJECTID ':' TYPEID ASSIGN . error IN expr

    error       shift, and go to state 144
    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 145


state 132

   35 let_list: OBJECTID ':' TYPEID ',' . let_list

    OBJECTID  shift, and go to state 65

    let_list  go to state 146


state 133

   29 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 29 (expr)


state 134

   40 case: OBJECTID ':' . TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 147


state 135

   39 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 39 (expr)


state 136

   42 case_list: case_list case .

    $default  reduce using rule 42 (case_list)


state 137

   65 expr_list_comma: expr_list_comma ',' error .

    $default  reduce using rule 65 (expr_list_comma)


state 138

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr
   64 expr_list_comma: expr_list_comma ',' expr .

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 64 (expr_list_comma)


state 139

   22 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'
   23     | expr '@' TYPEID '.' OBJECTID . '(' ')'

    '('  shift, and go to state 148


state 140

   25 expr: expr '.' OBJECTID '(' ')' .

    $default  reduce using rule 25 (expr)


state 141

   24 expr: expr '.' OBJECTID '(' expr_list_comma . ')'
   64 expr_list_comma: expr_list_comma . ',' expr
   65                | expr_list_comma . ',' error

    ')'  shift, and go to state 149
    ','  shift, and go to state 123


state 142

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   28     | IF expr THEN expr ELSE expr . FI
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    FI   shift, and go to state 150
    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87


state 143

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   33 let_list: OBJECTID ':' TYPEID IN expr .
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 33 (let_list)


state 144

   37 let_list: OBJECTID ':' TYPEID ASSIGN error . ',' let_list
   38         | OBJECTID ':' TYPEID ASSIGN error . IN expr

    IN   shift, and go to state 151
    ','  shift, and go to state 152


state 145

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   34 let_list: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   36         | OBJECTID ':' TYPEID ASSIGN expr . ',' let_list
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    IN   shift, and go to state 153
    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    ','  shift, and go to state 154


state 146

   35 let_list: OBJECTID ':' TYPEID ',' let_list .

    $default  reduce using rule 35 (let_list)


state 147

   40 case: OBJECTID ':' TYPEID . DARROW expr ';'

    DARROW  shift, and go to state 155


state 148

   22 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' . ')'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60
    ')'         shift, and go to state 156

    expr             go to state 96
    expr_list_comma  go to state 157


state 149

   24 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 24 (expr)


state 150

   28 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 28 (expr)


state 151

   38 let_list: OBJECTID ':' TYPEID ASSIGN error IN . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 158


state 152

   37 let_list: OBJECTID ':' TYPEID ASSIGN error ',' . let_list

    OBJECTID  shift, and go to state 65

    let_list  go to state 159


state 153

   34 let_list: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 160


state 154

   36 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' . let_list

    OBJECTID  shift, and go to state 65

    let_list  go to state 161


state 155

   40 case: OBJECTID ':' TYPEID DARROW . expr ';'

    IF          shift, and go to state 47
    LET         shift, and go to state 48
    WHILE       shift, and go to state 49
    CASE        shift, and go to state 50
    NEW         shift, and go to state 51
    ISVOID      shift, and go to state 52
    STR_CONST   shift, and go to state 53
    INT_CONST   shift, and go to state 54
    BOOL_CONST  shift, and go to state 55
    OBJECTID    shift, and go to state 56
    NOT         shift, and go to state 57
    '~'         shift, and go to state 58
    '{'         shift, and go to state 59
    '('         shift, and go to state 60

    expr  go to state 162


state 156

   23 expr: expr '@' TYPEID '.' OBJECTID '(' ')' .

    $default  reduce using rule 23 (expr)


state 157

   22 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'
   64 expr_list_comma: expr_list_comma . ',' expr
   65                | expr_list_comma . ',' error

    ')'  shift, and go to state 163
    ','  shift, and go to state 123


state 158

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   38 let_list: OBJECTID ':' TYPEID ASSIGN error IN expr .
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 38 (let_list)


state 159

   37 let_list: OBJECTID ':' TYPEID ASSIGN error ',' let_list .

    $default  reduce using rule 37 (let_list)


state 160

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   34 let_list: OBJECTID ':' TYPEID ASSIGN expr IN expr .
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87

    $default  reduce using rule 34 (let_list)


state 161

   36 let_list: OBJECTID ':' TYPEID ASSIGN expr ',' let_list .

    $default  reduce using rule 36 (let_list)


state 162

   22 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' ')'
   24     | expr . '.' OBJECTID '(' expr_list_comma ')'
   25     | expr . '.' OBJECTID '(' ')'
   40 case: OBJECTID ':' TYPEID DARROW expr . ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . LE expr
   52     | expr . '=' expr

    LE   shift, and go to state 79
    '<'  shift, and go to state 80
    '='  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '@'  shift, and go to state 86
    '.'  shift, and go to state 87
    ';'  shift, and go to state 164


state 163

   22 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 22 (expr)


state 164

   40 case: OBJECTID ':' TYPEID DARROW expr ';' .

    $default  reduce using rule 40 (case)
